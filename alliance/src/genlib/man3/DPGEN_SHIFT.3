.\\" auto-generated by docbook2man-spec $Revision: 1.1 $
.TH "DPGEN_SHIFT" "3" "24 May 2002" "ASIM/LIP6" "Alliance - genlib User's Manual"
.SH NAME
DPGEN_SHIFT \- Shifter Macro-Generator
.SH SYNOPSIS
\fB#include <genlib.h>
.sp
void GENLIB_MACRO(
.nf
.ta 7n +20n
	DPGEN_SHIFT,
	char *\fImodelname\fB,
	long \fIflags\fB,
	long \fIN\fB
);
.fi
\fR.SH "DESCRIPTION"
.PP
Generate a \fIN\fR bits shifter named \fImodelname\fR.
.PP
How it works :
.TP 0.2i
\(bu
if op[0] signal is set to '1' perform
a right shift, left shift otherwise.
.TP 0.2i
\(bu
if op[1] signal is set to '1' perform
a sign extention, i.e. an arithmetic shift (only meaningful in case
of a right shift).
.TP 0.2i
\(bu
shamt : specify the shift amount. The wide of this signal
(\fIY\fR) is computed from the operator's wide :
Y = log2(N) - 1.
.PP
.SS "TERMINAL NAMES"
.IP 1. 
op : select the kind of shift (input, 2 bit).
.IP 2. 
shamt : the shift amount (input, \fIY\fR bits). 
.IP 3. 
i0 : value to shift (input, \fIN\fR bits). 
.IP 4. 
q : output (\fIN\fR bits). 
.IP 5. 
vdd : power. 
.IP 6. 
vss : ground. 
.SH "EXAMPLE"
.PP
.sp
.nf
GENLIB_MACRO(DPGEN_SHIFT, "model_shift_32"
                        , F_BEHAV|F_PLACE
                        , 32
                        );

GENLIB_LOINS( "model_shift_32"
            , "instance1_shift_32"
            , "add_sub"
            , "op[1:0]"
            , "shamt[4:0]"
            , "i0[31:0]"
            ,  "q[31:0]"
            , "vdd", "vss", NULL
            );
    
.sp
.fi
.SH "SEE ALSO"
.PP
\fBGENLIB_MACRO\fR(3),
\fBgenlib\fR(1)
