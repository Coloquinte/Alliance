.\" @(#)PCBS.1 3.1 April 2001 UPMC; Author: DONNET Francois
.TH EMULBS 1 "February 2002" "Release 3.1" "CAO\-VLSI Reference Manual"
.SH NAME
.PP
\fIPcBs\fP, Emulated Boundary-Scan Tester Platform.

.so man1/alc_origin.1

.SH SYNOPSIS
.PP
   \f4emulbs\fP   [ -hvc ]  [ \-l <\fInumber\fP> ]  [ -b <\fInumber\fP> ] [ <\fIsource.PAT\fP> ]
                [ -e <\fIconnections_file\fP> [ -s <\fIbs.PAT\fP> ] ]
                [ \-\-pci <\fIres.PAT\fP> | \-\-parallel <\fIres.PAT\fP> ]
        

.SH DESCRIPTION
.PP
\f4emulbs\fP is a tool addressing a Boundary Scan card connected to the PC Printer
parallel interface or to the pci bus interface. This tool is able to :
.PP
\- Automatically check the Boundary\-scan device for Instruction register length, Bypass register length and Boundary\-scan register length, 
.PP
\- Execute Boundary\-scan patterns directly to the device,
.PP
\- Translate functionnal patterns to Boundary\-scan patterns using an ASCII description of the device Boundary\-scan architecture for the specific emulbs31 card.
.PP


To use this tool, you don't need to have a particular knowledge of Boundary-scan architecture.
The lpscan driver should be installed if you want to use the parallel port.

.PP
If it cannot communicate with the device, \f4emulbs\fP will output an error message 
like :
.PP
.nf
Cannot check INSTRUCTION Register (longer than xxxx bits ???)
Check the card connection
.fi



.SH DEFINITION
.PP
We call "\f4Boundary\-scan patterns\fP" patterns written for a device with Boundary\-scan architecture using only the Test Acess Port interface (i.e TDI, TDO, TMS, TCK and eventually TRST).
.br
We call "\f4Functionnal patterns\fP" patterns written for a device with Boundary\-
scan architecture, but using the fonctionnal interface  of the device or for a chip branched with the specific EMULBS31 card which emulated the boundary-scan device(--emulbs option).

.SH OPTION

.TP 10
\f4\-h,\-\-help\fP
Help mode. Displays possible uses of \f4emulbs\fP.

.TP 10
\f4\-v,\-\-verbose\fP
Verbose mode. Dump executed patterns as \f4asimut\fP.

.TP 10
\f4\-c,\-\-check\fP
Check the boundary scan device by sending some patterns. It's able to guess the kind of boundary-scan card is in use (instruction length, bypass length, boundary-scan length).

.TP 10
\f4\-l,\-\-load\fP <number>
Do not load all patterns in memory but do it by sequences of <number> patterns.
Boundary-scan patterns are well known to be huge. It's a way to save memory.

.TP 10
\f4\-b,\-\-burst\fP <number>
When you are using a pci bus, you can choose the size in words of your dma burst.
It's a nonsense to use this option with a parallel port.

.TP 10
\f4\-e,\-\-emulbs\fP <connections_file>
<connections_file> describes the device connections between the tested chip and the test card. Functional patterns in <source.PAT> will be serialized in boundary-scan patterns.
  
.TP 10
\f4\-s,\-\-save\fP <connections_file>
Save the produced boundary-scan patterns in the file <bs.PAT>.
This option should be used with \f4\-e,\-\-emulbs\fP.

.TP 10
\f4\--pci\fP <res.PAT>
To select the pci port where the test card is connected.
Results of testing <source.PAT> will be saved in the file <res.PAT>.

.TP 10
\f4\--parallel\fP <res.PAT>
To select the parallel port where the test card is connected.
Results of testing <source.PAT> will be saved in the file <res.PAT>.


.SH EMULBS CONNECTIONS FILE

.nf
--example for emulbs connexions file 
--left-hand is for EMULBS connector
--right-hand is for CHIP connector 
                                   
0    <=in     ck  ;
185  <=out    y   ;
56   <=in     i(0);
76   <=in     i(1);
80   <=inout  sh  ;
.fi

.SH SEE ALSO
.PP
pat(5), asimut(1)

.so man1/alc_bug_report.1






