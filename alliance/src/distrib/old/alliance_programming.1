ACTION, GENPAT Package (3) - 
AFFECT, GENPAT Package (3) - 
ARRAY, GENPAT Package (3) - 
BEH (3)              - Generic behavioural data structures
BUS (3)              - Creates a bus name for netlist
COPY_UP_ALL_CON (3)  - copy all physical connectors of an instance face in the current figure
COPY_UP_ALL_REF (3)  - copy a several physical reference from an instance in the current figure
COPY_UP_CON (3)      - copy a physical connector from an instance in the current figure
COPY_UP_CON_FACE (3) - copy a physical connector from an instance in the current figure
COPY_UP_REF (3)      - copy a physical reference from an instance in the current figure
COPY_UP_SEG (3)      - copy a physical segment from an instance in the current figure
DECLAR, GENPAT Package (3) - 
DEF_AB (3)           - define a new abutment box to the current layout cell
DEF_GENPAT, GENPAT Package (3) - 
DEF_LOFIG (3)        - open a netlist model as current figure
DEF_PHFIG (3)        - open a layout model as current figure
DEF_PHINS (3)        - define a new reference instance
DEF_PHSC (3)         - load a netlist and open a layout model as current figure
DP_ADD2F (3)         - Adder-Substractor
DP_ADSB2 (3)         - adder-substractor
DP_ADSB2F (3)        - Adder-Substractor
DP_AND2 (3)          - Logical and 2.
DP_AND3 (3)          - logical and 3
DP_BUFF (3)          - inverter
DP_BUSE (3)          - Tristate with direct output.
DP_CONST (3)         - Constant Generator
DP_DEFLOFIG (3)      - Open a new Data-Path figure/model.
DP_IMPORT (3)        - Add a new data-path component inside the current data-path.
DP_INV (3)           - inverter
DP_LOCON (3)         - Logical connector
DP_MULT (3)          - Unpipelined array multiplier.
DP_MULTP (3)         - Unpipelined array multiplier.
DP_MUX2CS (3)        - 2 input multiplexer.
DP_MUX3CD (3)        - 3 input multiplexer.
DP_MUX3CS (3)        - 3 input multiplexer.
DP_MUX4CS (3)        - 4 input multiplexer.
DP_MUX5CS (3)        - 5 input multiplexer.
DP_NAND2 (3)         - logical not and 2
DP_NAND2MASK (3)     - Logical not and 2 controllable mask.
DP_NAND3 (3)         - logical not and 3
DP_NBUSE (3)         - Tristate with complemented output.
DP_NMUX2CS (3)       - 2 input multiplexer, with complemented output.
DP_NOR2 (3)          - logical not or 2
DP_NOR2MASK (3)      - Logical not or 2 controllable mask.
DP_NOR3 (3)          - logical not or 3
DP_NUL (3)           - Zero Detect
DP_OR2 (3)           - logical or 2
DP_OR3 (3)           - logical or 3
DP_PDFF (3)          - D Flip-Flop with write enable.
DP_PDFFQ (3)         - D Flip-Flop with write enable.
DP_PDFFR (3)         - D Flip-Flop with write enable and reset.
DP_PDFFRT (3)        - D Flip-Flop with scan-path, write enable and reset.
DP_PDFFT (3)         - D Flip-Flop with scan-path and write enable.
DP_PDFFTQ (3)        - D Flip-Flop with scan-path and write enable.
DP_RFG1C0 (3)        - Register File
DP_RFG1CC (3)        - Register File
DP_RFG2C0 (3)        - Register File
DP_RFG2CC (3)        - Register File
DP_SAVLOFIG (3)      - Save Data-Path figure/model.
DP_SHIFT (3)         - Barrel Shifter
DP_TRACE (3)         - Eanble/disable trace mode.
DP_XNOR2 (3)         - logical not exclusive or 2
DP_XNOR2MASK (3)     - Logical not exclusive or 2 controllable mask.
DP_XOR2 (3)          - logical exclusive or 2
ELM (3)              - Creates a single element bus name for netlist
FLATTEN_ALL_LOINS (3) - flatten all instances in the current netlist figure
FLATTEN_ALL_PHINS (3) - flatten all instances in the current layout figure
FLATTEN_LOFIG (3)    - flatten an instance in the current netlist figure
FLATTEN_PHFIG (3)    - flatten an instance in the current layout figure
GETCPAT, GENPAT Package (3) - 
GET_CON_X (3)        - retrieve the x coordinate of an instance connector
GET_CON_Y (3)        - retrieve the x coordinate of an instance connector
GET_INS_X (3)        - retrieve the x coordinate of an instance
GET_INS_Y (3)        - retrieve the y coordinate of an instance
GET_REF_X (3)        - retrieve the x coordinate of an instance reference
GET_REF_Y (3)        - retrieve the y coordinate of an instance reference
HEIGHT (3)           - compute the height of a model
INIT, GENPAT Package (3) - 
LABEL, GENPAT Package (3) - 
LOAD_LOFIG (3)       - loads a netlist form disk and opens it as current figure
LOCON (3)            - adds a logical connector to the current netlist figure
LOINS (3)            - add a logical instance to the current figure
LOINSE (3)           - add a logical instance to the current figure, with explicit connections
LOSIG (3)            - declare an internal logical signal, or a vector of internal logical signals
LOSIGMERGE (3)       - merge two logical signals
LOTRS (3)            - adds a logical transistor to the current netlist figure
OUTLINE (3)          - build an outline from the current layout cell
OpenVerticalChannel (3) - open a vertical channel in a phfig man1/alc_origin.1
OpenVerticalChannel (3) - open a vertical channel inside a phfig man1/alc_origin.1
PAT (3)              - Generic pattern data structure
PHAD_PHFIG (3)       - loads a layout form disk and opens it as current figure
PHCON (3)            - place a physical connector in the current figure at absolute coordinates
PHREF (3)            - place a physical reference in the current figure at absolute coordinates
PHSEG (3)            - place a physical segment in the current figure at absolute coordinates
PHVIA (3)            - place a physical via in the current figure at absolute coordinates
PLACE (3)            - place a physical instance in the current figure at absolute coordinates
PLACE_BOTTOM (3)     - place a physical instance in the current figure under the "reference instance"
PLACE_CON_REF (3)    - put a connector on top of a reference belonging an instance in the current figure
PLACE_LEFT (3)       - place a physical instance in the current figure at the left of the "reference instance"
PLACE_ON (3)         - place a physical instance in the current figure matching connectors
PLACE_RIGHT (3)      - place a physical instance in the current figure at the right of the "reference instance"
PLACE_SEG_REF (3)    - put a segment on a reference belonging an instance in the current figure
PLACE_TOP (3)        - place a physical instance in the current figure on the top of the "reference instance"
PLACE_VIA_REF (3)    - put a via on top of a reference belonging to an instance in the current figure
PMExpr (3)           - returns 1 if the pattern matching is possible between two expressions.
REVERSE_PHCON (3)    - reverse the order of physical connectors on a bus.
SAVE, GENPAT Package (3) - 
SAVE_LOFIG (3)       - save a netlist on disk
SAVE_PHFIG (3)       - save a layout on disk
SAVE_PHSC (3)        - save a layout on disk
SAV_GENPAT, GENPAT Package (3) - 
SC_BOTTOM (3)        - place an instance in the current figure at the right of the "reference instance"
SC_LEFT (3)          - place an instance in the current figure at the right of the "reference instance"
SC_PLACE (3)         - place an instance in the current figure at absolute coordinates
SC_RIGHT (3)         - place an instance in the current figure at the right of the "reference instance"
SC_TOP (3)           - place an instance in the current figure at the right of the "reference instance"
SymbolicChannelRouter (3) - routes a given channel on a Virtual grid man1/alc_origin.1
SymbolicChannelRouter (3) - routes a given channel on a symbolic grid man1/alc_origin.1
THRU_CON_H (3)       - draw an horizontal wire from side to side of the abutment box of the current figure
THRU_CON_V (3)       - draw a vertical wire with connectors from side to side of the abutment box of the current figure
THRU_H (3)           - draw an horizontal wire from side to side of the abutment box of the current figure
THRU_V (3)           - draw a vertical wire from side to side of the abutment box of the current figure
UNFLATTEN_LOFIG (3)  - creates a hierarchy level from instances in the current logical figure
WIDTH (3)            - compute the width of a model
WIRE1 (3)            - place a physical segment in the current figure
WIRE2 (3)            - place two physical segments in the current figure
WIRE3 (3)            - place three physical segments in the current figure
ablToBddCct (3)      - converts an ABL into a BDD within a circuit
aboxmbkrds (3)       - converts MBK abutment box to RDS rectangle man1/alc_origin.1
action, GENPAT Package (3) - 
addHExpr (3)         - adds a new argument at the head of an operator expression.
addInputCct (3)      - adds an input to a circuit
addListBdd (3)       - adds a BDD to a chained list of BDDs
addOuputCct (3)      - adds an ouput associated to a BDD in a circuit
addQExpr (3)         - adds a new argument at the queue of an operator expression.
addTH (3)            - adds a new item in a hash table.
addablhexpr (3)      - adds a new argument in head of an expression.
addablqexpr (3)      - adds a new argument in queue of an expression.
addauth2elem (3)     - adds an element in the hash table. man1/alc_origin.1
addauthelem (3)      - adds an element in the hash table. man1/alc_origin.1
addbddassoc (3)      - creates a new association variables. man1/alc_origin.1
addbddcircuitabl (3) - converts an abl expression to a bdd node. man1/alc_origin.1
addbddcircuitin (3)  - adds an input in a bdd circuit. man1/alc_origin.1
addbddcircuitout (3) - adds an output in a bdd circuit. man1/alc_origin.1
addbddnode (3)       - adds a new bdd node in the bdd system. man1/alc_origin.1
addbddnodeassoc (3)  - adds a bdd node in a variable association. man1/alc_origin.1
addbddnodelist (3)   - adds a node in a chain_list. man1/alc_origin.1
addbddvar (3)        - adds a new variable in the bdd system. man1/alc_origin.1
addbddvarafter (3)   - adds a new variable, after an existing one. man1/alc_origin.1
addbddvarbefore (3)  - adds a new variable, before an existing one. man1/alc_origin.1
addbddvarfirst (3)   - adds a new variable, before all others. man1/alc_origin.1
addbddvarlast (3)    - adds a new variable, after all others. man1/alc_origin.1
addcapa (3)          - add a capacitance to a signal man1/alc_origin.1
addchain (3)         - create a chain and add it to a list man1/alc_origin.1
addht (3)            - create an hash table man1/alc_origin.1
addhtitem (3)        - adds a new item in a hash table. man1/alc_origin.1
addlocon (3)         - create a logical connector man1/alc_origin.1
addlofig (3)         - create a new structural cell model man1/alc_origin.1
addloins (3)         - create a logical instance man1/alc_origin.1
addlomodel (3)       - create a tempotary logical model and add it to a list man1/alc_origin.1
addlosig (3)         - create a logical signal man1/alc_origin.1
addlotrs (3)         - create a logical transistor man1/alc_origin.1
addnum (3)           - create a num and add it to a list man1/alc_origin.1
addphcon (3)         - create a physical connector man1/alc_origin.1
addphfig (3)         - create a new physical cell model man1/alc_origin.1
addphins (3)         - create a physical instance man1/alc_origin.1
addphref (3)         - create a physical reference man1/alc_origin.1
addphseg (3)         - create a physical segment man1/alc_origin.1
addphvia (3)         - create a physical via man1/alc_origin.1
addptype (3)         - create a ptype and add it to a ptype_list man1/alc_origin.1
addrdsfig (3)        - adds a figure man1/alc_origin.1
addrdsfigrec (3)     - adds a rectangle to a figure man1/alc_origin.1
addrdsins (3)        - adds an instance to a figure man1/alc_origin.1
addrdsinsrec (3)     - adds a rectangle to an instance man1/alc_origin.1
addrdsrecwindow (3)  - adds a rectangle in the windowing of rds structure. man1/alc_origin.1
affect, GENPAT Package (3) - 
alliancebanner (3)   - display the standardized Alliance banner man1/alc_origin.1
allocrdsfig (3)      - allocs memory for a figure man1/alc_origin.1
allocrdsins (3)      - allocates memory for an instance man1/alc_origin.1
allocrdsrec (3)      - allocates memory for a rectangle man1/alc_origin.1
allocrdsrecwin (3)   - allocates a structure used to know windows which contains a rectangle. man1/alc_origin.1
allocrdswin (3)      - allocates window's table man1/alc_origin.1
allocrdswindow (3)   - allocates a window structure man1/alc_origin.1
allocrdswinrec (3)   - allocates a structure used to create a list of tables of rectangles. man1/alc_origin.1
anyExpr (3)          - returns the value of a logical OR applied on the results of the application of a function on the arguments of an operator expression
append (3)           - append a chain_list to an other chain_list man1/alc_origin.1
applyBdd (3)         - applies an operator to a list of BDD.
applyBinBdd (3)      - applies an operator to two BDD.
applybddnode (3)     - applies an operator on two bdd nodes. man1/alc_origin.1
applybddnodeite (3)  - computes the IF-THEN-ELSE logical operation.
applybddnodelist (3) - applies an opertor to a bdd nodes list. man1/alc_origin.1
applybddnodenot (3)  - complements a bdd. man1/alc_origin.1
applybddnodeterm (3) - applies an operator on two bdd nodes. man1/alc_origin.1
applyrdssym (3)      - applies a transformation to a rectangle from a model man1/alc_origin.1
apr (3)              - routing and placement functions man1/alc_origin.1
arp (3)              - routing and placement functions man1/alc_origin.1
array, GENPAT Package (3) - 
autallocblock (3)    - memory allocator man1/alc_origin.1
autallocheap (3)     - heap memory allocator man1/alc_origin.1
autfreeblock (3)     - releases a memory block man1/alc_origin.1
autfreeheap (3)      - releases a memory block, and put it on the heap. man1/alc_origin.1
auth2elem (3)        - element in an hash table with two keys.
auth2table (3)       - hash table structure
authelem (3)         - element in an hash table
authtable (3)        - hash table structure
autresizeblock (3)   - resizes a memory block man1/alc_origin.1
bddToAblCct (3)      - converts a BDD into an ABL within a circuit
beaux (3)            - BEH data structure
bebus (3)            - BEH data structure
bebux (3)            - BEH data structure
befig (3)            - BEH data structure
begen (3)            - BEH data structure
beh_addbeaux, beh_delbeaux, beh_rmvbeaux, beh_frebeaux (3) - 
beh_addbebus, beh_delbebus, beh_rmvbebus, beh_frebebus (3) - 
beh_addbebux, beh_delbebux, beh_rmvbebux, beh_frebebux (3) - 
beh_addbefig, beh_delbefig, beh_rmvbefig, beh_frebefig (3) - 
beh_addbegen, beh_delbegen, beh_rmvbegen, beh_frebegen (3) - 
beh_addbemsg, beh_delbemsg, beh_rmvbemsg, beh_frebemsg (3) - 
beh_addbeout, beh_delbeout, beh_rmvbeout, beh_frebeout (3) - 
beh_addbepor, beh_delbepor, beh_rmvbepor, beh_frebepor (3) - 
beh_addbereg, beh_delbereg, beh_rmvbereg, beh_frebereg (3) - 
beh_addberin, beh_delberin, beh_rmvberin, beh_freberin (3) - 
beh_addbiabl, beh_delbiabl, beh_frebiabl (3) - 
beh_addbinode, beh_delbinode, beh_frebinode (3) - 
beh_debug (3)        - BEH structures displayer-debugger
beh_depend (3)       - compute forward dependencies in a description
beh_error (3)        - 
beh_makbdd (3)       - create a BDD for each expression in a description
beh_makgex (3)       - create a GEX for each expression in a description
beh_message (3)      - 
bemsg (3)            - BEH data structure
beout (3)            - BEH data structure
bepor (3)            - BEH data structure
bereg (3)            - BEH data structure
berin (3)            - BEH data structure
biabl (3)            - BEH data structure
bigvia (3)           - draws a non minimal via as a bunch of vias man1/alc_origin.1
binode (3)           - BEH data structure
buildrdswindow (3)   - builds windowing of a figure man1/alc_origin.1
chain (3)            - mbk lisp-like service structure
changeOperExpr (3)   - changes the operator of the head of an expression.
charToExpr (3)       - converts a string into an expression
charToOper (3)       - converts an operator string into an operator number
checkloconorder (3)  - checks the consistency of a list of logical connectors man1/alc_origin.1
clearbddsystemref (3) - clears the references for all bdd nodes. man1/alc_origin.1
clearbddsystemrefext (3) - clears the external references for all bdd nodes. man1/alc_origin.1
clearbddsystemrefint (3) - clears the internal references for all bdd nodes. man1/alc_origin.1
cofactorbddnode (3)  - computes the generalized cofactor.
comment, GENPAT Package (3) - 
composeBdd (3)       - substitutes an index by a BDD in another BDD
composeCct (3)       - composes all the outputs within a circuit with a BDD
composebddnode (3)   - substitutes a variable by a bdd in another bdd.
concatname (3)       - concatenate two names with user separator man1/alc_origin.1
conmbkrds (3)        - converts MBK connector to RDS rectangle man1/alc_origin.1
constraintBdd (3)    - restricts a BDD to another BDD
constraintCct (3)    - restricts all the outputs within a circuit with a BDD constraint
conv, GENPAT Package (3) - 
convcmp, GENPAT Package (3) - 
convertbddcircuitabl (3) - converts a bdd node to an abl expression.
convertbddcircuitsumabl (3) - converts a bdd node to an abl expression.
convertbddindexabl (3) - converts a bdd index to an abl expression.
convertbddmuxabl (3) - converts two bdd nodes to an abl multiplexor expression.
convertbddnodeabl (3) - converts a bdd node to an abl expression.
convertbddnodesumabl (3) - converts a bdd node to an abl expression.
copyExpr (3)         - copies an expression
cpOrderCct (3)       - copies the association order of the inputs with the indexes in another circuit
createAtom (3)       - creates an atomic expression.
createBinExpr (3)    - creates a binary operator expression with an eventual merging of the operators.
createExpr (3)       - creates the head of an operator expression.
createNodeTermBdd (3) - creates a terminal node of variable.
createTH (3)         - create a hash table
createablatom (3)    - creates an atomic expression. man1/alc_origin.1
createablbinexpr (3) - creates a binary operator expression. man1/alc_origin.1
createablnotexpr (3) - complements an expression. man1/alc_origin.1
createabloper (3)    - creates the head of an operator expression. man1/alc_origin.1
createablunaryexpr (3) - creates an unary operator expression. man1/alc_origin.1
createablxorbinexpr (3) - creates an 'xor' or 'xnor' operator expression. man1/alc_origin.1
createauth2table (3) - creates an hash table with two keys. man1/alc_origin.1
createauthtable (3)  - creates a simple hash table. man1/alc_origin.1
createbddcircuit (3) - creates a bdd circuit. man1/alc_origin.1
createbddsystem (3)  - creates a bdd system. man1/alc_origin.1
decbddrefext (3)     - decrements the external reference of a bdd node. man1/alc_origin.1
decbddrefint (3)     - decrements the internal reference of a bdd node. man1/alc_origin.1
def_genpat, GENPAT Package (3) - 
defab (3)            - defines the abutment box of a phfig man1/alc_origin.1
delablexpr (3)       - deletes an expression. man1/alc_origin.1
delablexprnum (3)    - deletes an operand in an expression. man1/alc_origin.1
delauth2elem (3)     - deletes an element in the hash table. man1/alc_origin.1
delauthelem (3)      - deletes an element in the hash table. man1/alc_origin.1
delbddassoc (3)      - deletes a variable association. man1/alc_origin.1
delbddcircuitout (3) - deletes an output in a bdd circuit. man1/alc_origin.1
delbddnode (3)       - deletes an unused bdd node. man1/alc_origin.1
delbddnodeassoc (3)  - deletes a bdd node in a variable association. man1/alc_origin.1
delbddnodelist (3)   - deletes a list of bdd nodes. man1/alc_origin.1
delchain (3)         - delete an element of a chain_list man1/alc_origin.1
deleteNumExpr (3)    - removes the i-th argument of an operator expression.
deleteTH (3)         - removes an item in a hash table.
delht (3)            - removes an hash table man1/alc_origin.1
delhtitem (3)        - removes an item in an hash table man1/alc_origin.1
dellocon (3)         - delete a logical connector man1/alc_origin.1
dellofig (3)         - delete and free a logical figure man1/alc_origin.1
delloins (3)         - delete a logical instance man1/alc_origin.1
dellosig (3)         - delete a logical signal man1/alc_origin.1
dellotrs (3)         - delete a logical transistor man1/alc_origin.1
delnum (3)           - delete an element of a num_list man1/alc_origin.1
delphcon (3)         - delete a physical connector man1/alc_origin.1
delphfig (3)         - delete and free a physical figure man1/alc_origin.1
delphins (3)         - delete a physical instance man1/alc_origin.1
delphref (3)         - delete a physical reference man1/alc_origin.1
delphseg (3)         - delete a physical segment man1/alc_origin.1
delphvia (3)         - delete a physical via man1/alc_origin.1
delptype (3)         - delete an element of a ptype_list man1/alc_origin.1
delrdsfig (3)        - deletes a figure man1/alc_origin.1
delrdsfigrec (3)     - deletes a rectangle of a figure man1/alc_origin.1
delrdsins (3)        - deletes an instance of a figure man1/alc_origin.1
delrdsinsrec (3)     - deletes a rectangle of an instance man1/alc_origin.1
delrdsrecwindow (3)  - deletes a rectangle from the windowing of rds structure. man1/alc_origin.1
destroyBdd (3)       - removes the BDDs system
destroyCct (3)       - removes a circuit
destroyTH (3)        - removes a hash table
destroyauth2table (3) - destroys an hash table with two keys. man1/alc_origin.1
destroyauthtable (3) - destroys a simple hash table. man1/alc_origin.1
destroybddassoc (3)  - frees all the variable associations. man1/alc_origin.1
destroybddcircuit (3) - destroys a bdd circuit. man1/alc_origin.1
destroybddsystem (3) - destroys a bdd system. man1/alc_origin.1
destroyrdswindow (3) - destroys windowing of a figure man1/alc_origin.1
devXor2Expr (3)      - converts XOR 2 to OR-AND
devXorExpr (3)       - removes XOR in an expression
devablxorexpr (3)    - develops 'xor', 'nxor' in an expression. man1/alc_origin.1
devdupablxorexpr (3) - duplicates and develops 'xor', 'nxor'. man1/alc_origin.1
displayBdd (3)       - displays a BDD
displayCct (3)       - displays a circuit
displayExpr (3)      - displays an expression in a prefixed notation.
displayInfExpr (3)   - displays an expression in infixed notation.
displayTH (3)        - displays a hash table
downstr (3)          - convert a string to lower case man1/alc_origin.1
dupablexpr (3)       - duplicates an expression. man1/alc_origin.1
equalExpr (3)        - checks that two expressions are strictly equal
equalVarExpr (3)     - checks that two expressions are syntactically equal
everyExpr (3)        - returns the value of a logical AND applied on the results of the application of a function on the argument of an operator expression.
existbddnodeassocoff (3) - computes an existantial quantification. man1/alc_origin.1
existbddnodeassocon (3) - computes an existantial quantification. man1/alc_origin.1
exprToChar (3)       - converts an expression into a string
figmbkrds (3)        - converts MBK figure to RDS figure man1/alc_origin.1
filepath (3)         - return the whole search path of a file man1/alc_origin.1
flatArityExpr (3)    - flattens the operators of an expression
flatPolarityExpr (3) - translates the inverters of an expression to the level of atomic expressions
flatablexpr (3)      - merges the operators of an expression man1/alc_origin.1
flatenphfig (3)      - flatten a instance in a figure man1/alc_origin.1
flattenlofig (3)     - flatten a instance in a logical figure man1/alc_origin.1
freeExpr (3)         - frees an expression.
freeablexpr (3)      - frees an expression. man1/alc_origin.1
freechain (3)        - free a chain_list man1/alc_origin.1
freelomodel (3)      - free a lofig_list for temporary models man1/alc_origin.1
freenum (3)          - free a num_list man1/alc_origin.1
freeptype (3)        - free a ptype_list man1/alc_origin.1
freerdsfig (3)       - frees memory associated to a figure man1/alc_origin.1
freerdsins (3)       - frees memory associated to an instance man1/alc_origin.1
freerdsrec (3)       - free memory associated to a rectangle man1/alc_origin.1
garbagebddsystem (3) - Forces a bdd garbage collection.
gcNodeBdd (3)        - does a garbage collection
gcNodeCct (3)        - does a garbage collection
getablexprdepth (3)  - gives the depth of an expression. man1/alc_origin.1
getablexprlength (3) - gives the length of an expression. man1/alc_origin.1
getablexprmax (3)    - applies a function to all operands. man1/alc_origin.1
getablexprmin (3)    - applies a function to all operands. man1/alc_origin.1
getablexprnum (3)    - gives a specified operand of an expression. man1/alc_origin.1
getablexprnumatom (3) - gives the number of atom in an expression. man1/alc_origin.1
getablexprnumbinoper (3) - gives the number of binary operators in an expression. man1/alc_origin.1
getablexprnumocc (3) - how many times a name appears in an expression. man1/alc_origin.1
getablexprsupport (3) - gives the expression's support. man1/alc_origin.1
getbddnodenum (3)    - gets the number of nodes in a bdd. man1/alc_origin.1
getbddnodesize (3)   - gets the number of nodes in a bdd. man1/alc_origin.1
getbddnodesupport (3) - gives the variable support of a bdd node. man1/alc_origin.1
getbddvarbyindex (3) - converts bdd index to a variable number. man1/alc_origin.1
getbddvarindex (3)   - converts a variable number in a bdd index. man1/alc_origin.1
getbddvarnode (3)    - gives the bdd node of a variable. man1/alc_origin.1
gethtitem (3)        - searches an item in a hash table man1/alc_origin.1
getlocon (3)         - retrieve a logical connector man1/alc_origin.1
getlofig (3)         - give back a pointer to a lofig man1/alc_origin.1
getloins (3)         - retrieve a logical instance man1/alc_origin.1
getlomodel (3)       - retrieve a model from a lofig_list man1/alc_origin.1
getlosig (3)         - retrieve a logical signal man1/alc_origin.1
getphcon (3)         - retrieve a physical connector man1/alc_origin.1
getphfig (3)         - give back a pointer to a phfig man1/alc_origin.1
getphins (3)         - retrieve a physical instance man1/alc_origin.1
getphref (3)         - retrieve a physical reference man1/alc_origin.1
getptype (3)         - retrieve a ptype from a ptype_list man1/alc_origin.1
getrdsfig (3)        - gets a pointer to a figure called by its name. man1/alc_origin.1
getrdsmodellist (3)  - gets model list of the instances of a figure man1/alc_origin.1
getsigname (3)       - choose a signal name in alias list man1/alc_origin.1
givelosig (3)        - give a logical signal man1/alc_origin.1
grog (3)             - call the ROM generator man1/alc_origin.1
guessextdir (3)      - guess external connectors directions from internal connectors directions man1/alc_origin.1
identExpr (3)        - gives an ident from an operator expression.
implybddnode (3)     - computes a bdd that implies a conjonction of two bdd nodes. man1/alc_origin.1
incatalog (3)        - test if cell belongs to the catalog file man1/alc_origin.1
incatalogdelete (3)  - test if cell belongs to the catalog file man1/alc_origin.1
incatalogfeed (3)    - test if cell belongs to the catalog file man1/alc_origin.1
incataloggds (3)     - test if cell belongs to the catalog file man1/alc_origin.1
incbddrefext (3)     - increments the external reference of a bdd node. man1/alc_origin.1
incbddrefint (3)     - increments the internal reference of a bdd node. man1/alc_origin.1
init, GENPAT Package (3) - 
initializeBdd (3)    - initializes the BDDs system
initializeCct (3)    - creates a circuit
insconmbkrds (3)     - adds in RDS instance all the connectors of MBK instance man1/alc_origin.1
insmbkrds (3)        - converts MBK figure to RDS figure man1/alc_origin.1
insrefmbkrds (3)     - adds in RDS instance all the references of MBK instance. man1/alc_origin.1
inssegmbkrds (3)     - adds in RDS instance all the segments of MBK instance man1/alc_origin.1
instanceface (3)     - returns the face of a connector in a placed instance man1/alc_origin.1
instr (3)            - find an occurence of a string in a string, starting at a specified character. man1/alc_origin.1
insviambkrds (3)     - adds to RDS instance all the contacts from MBK instance man1/alc_origin.1
intersectbddnode (3) - tests for an intersection between two bdd nodes. man1/alc_origin.1
isablbinaryoper (3)  - tests if an operator is binary. man1/alc_origin.1
isablequalexpr (3)   - tests if two expressions are strictly identicals. man1/alc_origin.1
isabloperinexpr (3)  - tests if an operator appears in an expression. man1/alc_origin.1
isablsimilarexpr (3) - tests if two expressions have the same morphology. man1/alc_origin.1
isablunaryoper (3)   - tests if an operator is unary. man1/alc_origin.1
isbddvarinsupport (3) - tests if a variable appears in a bdd. man1/alc_origin.1
isvdd (3)            - tells if a name contains the pattern defined by the user man1/alc_origin.1
isvss (3)            - tells if a name contains the pattern defined by the user man1/alc_origin.1
label, GENPAT Package (3) - 
lengthExpr (3)       - returns the number of arguments in an expression
loadlofig (3)        - load a new logical cell model from disk man1/alc_origin.1
loadphfig (3)        - load a new physical cell model from disk man1/alc_origin.1
loadrdsfig (3)       - give back a pointer to a figure man1/alc_origin.1
loadrdsparam (3)     - load parameters from symbolic to real conversion. man1/alc_origin.1
locon (3)            - mbk logical connector
lofig (3)            - mbk logical figure
lofigchain (3)       - creates a netlist in terms of connectors on signals man1/alc_origin.1
log (3)              - logical representations for boolean functions and utilities. man1/alc_origin.1
loins (3)            - mbk logical instance
losig (3)            - mbk logical signal
lotrs (3)            - mbk logical transistor
mapCarExpr (3)       - creates a new expression by applying a function to all the arguments of an operator expression
mapExpr (3)          - applies a procedure to all arguments of an operator expression
mapablanyexpr (3)    - applies a function to all operands. man1/alc_origin.1
mapableveryexpr (3)  - applies a function to all operands. man1/alc_origin.1
mapablexpr (3)       - applies a function to all operands. man1/alc_origin.1
mapabloperexpr (3)   - applies a function to all operands. man1/alc_origin.1
markAllBdd (3)       - marks all the nodes of the BDDs system
markBdd (3)          - marks all nodes of a BDD
markbddnode (3)      - marks bdd node with a specified mask. man1/alc_origin.1
maxExpr (3)          - returns the highest argument of an operator expression.
mbk (3)              - Generic layout ,netlist and utility data structures man1/alc_origin.1
mbkalloc (3)         - mbk memory allocator man1/alc_origin.1
mbkenv (3)           - set user preferences man1/alc_origin.1
mbkfopen (3)         - open a file with several search pathes man1/alc_origin.1
mbkfree (3)          - mbk memory allocator man1/alc_origin.1
mbkps (3)            - mbk process state man1/alc_origin.1
mbkrealloc (3)       - mbk memory reallocator man1/alc_origin.1
mbkunlink (3)        - delete a file in the WORK_LIBP. man1/alc_origin.1
minExpr (3)          - returns the lowest argument of an operator expression.
mlodebug (3)         - logical data structure contents debug function man1/alc_origin.1
modelmbkrds (3)      - gets all models of instances contained in a figure. man1/alc_origin.1
mphdebug (3)         - physical data structure contents debug function man1/alc_origin.1
namealloc (3)        - hash table for strings man1/alc_origin.1
namefind (3)         - hash table for strings man1/alc_origin.1
nameindex (3)        - concatenate a name and index with user separator man1/alc_origin.1
naturalstrcmp (3)    - compare string in alphabetical order for letters and numerical for digits. man1/alc_origin.1
normExpr (3)         - normalizes an expression
notBdd (3)           - complements a BDD
notExpr (3)          - complements an expressio and eventually does a simplification
num (3)              - mbk list of number
numberAtomExpr (3)   - returns the number of atoms in an expression
numberNodeAllBdd (3) - count the number of nodes used in the BDD system
numberNodeBdd (3)    - computes the number of nodes used in a BDD
numberNodeCct (3)    - counts the number of nodes used within a circuit
numberOccExpr (3)    - returns the number of time an atom appears in an expression.
numberOperBinExpr (3) - returns the number of equivalent binary operators in an expression
operToChar (3)       - converts an operator number into an operator string
pacom (3)            - PAT data structure
paevt (3)            - PAT data structure
pagrp (3)            - PAT data structure
paini (3)            - PAT data structure
paiol (3)            - PAT data structure
papat (3)            - PAT data structure
paseq (3)            - PAT data structure
pat_addpacom, pat_frepacom (3) - 
pat_addpaevt, pat_frepaevt (3) - 
pat_addpagrp (3)     - 
pat_addpaini, pat_frepaini (3) - 
pat_addpaiol, pat_crtpaiol, pat_frepaiol (3) - 
pat_addpapat, pat_frepapat (3) - 
pat_addpaseq (3)     - 
pat_debug (3)        - PAT structures displayer-debugger
pat_lodpaseq (3)     - pattern file compiler
pat_savpaseq (3)     - save pattern structures in a pattern description file
phcon (3)            - mbk physical connector
phfig (3)            - mbk physical figure
phins (3)            - mbk physical instance
phref (3)            - mbk physical reference
phseg (3)            - mbk physical segment
phvia (3)            - mbk physical contact
place (3)            - place the cells of a net list man1/alc_origin.1
polarablexpr (3)     - moves inverters to the atomic level.
polardupablexpr (3)  - duplicates an expression and moves down the inverters.
port, GENPAT Package (3) - 
process, GENPAT Package (3) - 
profAOExpr (3)       - returns the depth of an expression without taking the inverters into account.
profExpr (3)         - returns the depth of an expression.
proofCct (3)         - checks the equivalence of two circuits
ptype (3)            - mbk list of typed pointers
rdsalloc (3)         - memory allocation function man1/alc_origin.1
rdsenv (3)           - set user preference man1/alc_origin.1
rdsfree (3)          - free memory place man1/alc_origin.1
refmbkrds (3)        - adds to RDS figure a references from a MBK figure man1/alc_origin.1
register, GENPAT Package (3) - 
relprodbddnodeassoc (3) - computes a relational product. man1/alc_origin.1
reorderbddsystemdynamic (3) - specifies the dynamic bdd reorder parameters. man1/alc_origin.1
reorderbddsystemsimple (3) - reorders the bdd nodes of a bdd system. man1/alc_origin.1
reorderbddsystemtop (3) - reorders the bdd nodes of a bdd system. man1/alc_origin.1
reorderbddsystemwindow (3) - reorders the bdd nodes of a bdd system. man1/alc_origin.1
resetBdd (3)         - resets the BDDs system
resetCct (3)         - resets a circuit
resetauth2table (3)  - resets an hash table with two keys. man1/alc_origin.1
resetauthtable (3)   - resets a simple hash table. man1/alc_origin.1
resetbddcircuit (3)  - resets a bdd circuit. man1/alc_origin.1
resetbddsystem (3)   - resets a bdd system. man1/alc_origin.1
restorealldir (3)    - restore all instances' connectors directions man1/alc_origin.1
restoredirvbe (3)    - restore connectors directions from behavioral view man1/alc_origin.1
restrictbddnode (3)  - substitutes a variable by a zero or one, in a bdd.
reverse (3)          - reverse a list of chained elements man1/alc_origin.1
rflattenlofig (3)    - recursivly flatten a figure man1/alc_origin.1
rflattenphfig (3)    - recursivly flatten a figure man1/alc_origin.1
roundrdsrec (3)      - adjusts a rectangle to lambda grid step man1/alc_origin.1
rsa (3)              - call the Recurrence Solver Adder generator man1/alc_origin.1
satisfybddnode (3)   - finds a satisfying path for a bdd node. man1/alc_origin.1
sav_genpat, GENPAT Package (3) - 
savelofig (3)        - save a logical figure on disk man1/alc_origin.1
savephfig (3)        - save a physical figure on disk man1/alc_origin.1
saverdsfig (3)       - save a physical figure on disk. man1/alc_origin.1
searchExpr (3)       - searches for a specific atom in an expression.
searchInputCct (3)   - searches for the index number associated to an input.
searchNumExpr (3)    - fetches the i-th argument in an operator expression.
searchOperExpr (3)   - searches for an operator in an expression.
searchOuputCct (3)   - searches for the BDD associated to an output
searchTH (3)         - searches an item in a hash table.
searchauth2elem (3)  - searches an element in the hash table. man1/alc_origin.1
searchauthelem (3)   - searches an element in the hash table. man1/alc_origin.1
searchbddcircuitin (3) - searchs an input in a bdd circuit. man1/alc_origin.1
searchbddcircuitout (3) - searchs an output in a bdd circuit. man1/alc_origin.1
searchrdsfig (3)     - searchs by name a figure in the list of figures man1/alc_origin.1
segmbkrds (3)        - adds to RDS figure a segment from a MBK figure man1/alc_origin.1
setbddrefext (3)     - increments the external reference, and decrements the internal reference of a bdd node. man1/alc_origin.1
sethtitem (3)        - test and set an item in an hash table. man1/alc_origin.1
signal, GENPAT Package (3) - 
simpablexpr (3)      - simplies an expression. man1/alc_origin.1
simpbddnodedcoff (3) - simplifies a bdd with don't cares on its off-set part.
simpbddnodedcon (3)  - simplifies a bdd with don't cares on its on-set part.
simpdupablexpr (3)   - duplicates and simplies an expression. man1/alc_origin.1
simplif10Expr (3)    - makes simplifications on an expression including constant atomic expressions
simplifDcOneBdd (3)  - simplifies a BDD with don't cares on its on-set part
simplifDcZeroBdd (3) - simplifies a BDD with don't cares on its off-set part
simplifNotExpr (3)   - makes simplifications on an expression including inverters
sortExpr (3)         - sorts an expression
sortautarray (3)     - heap sort. man1/alc_origin.1
sortlocon (3)        - sort the logical connectors of a figure by name man1/alc_origin.1
sortlosig (3)        - sort the logical signals of a figure by name man1/alc_origin.1
substExpr (3)        - copies an expression by substituting a given atom by an expression
substPhyExpr (3)     - substitutes an atomic expression by an expression within an operator expression
substablexpr (3)     - substitutes a given atom by an expression.
substbddnodeassoc (3) - substitutes a set of variables with a set of bdd node. man1/alc_origin.1
substdupablexpr (3)  - substitutes a given atom by an expression.
supportChain_listBdd (3) - returns a chained list of nodes that are used in a given BDD.
supportChain_listExpr (3) - returns the support of an expression in a chain_list.
supportPtype_listExpr (3) - returns the support of an expression in a ptype_list.
swapbddvar (3)       - swaps two contiguous variables. man1/alc_origin.1
testbddcircuit (3)   - debugs a bdd circuit. man1/alc_origin.1
unflatablexpr (3)    - unflats the operators of an expression man1/alc_origin.1
unflattenlofig (3)   - creates a hierarchy level from instances of a figure man1/alc_origin.1
unmarkbddnode (3)    - unmarks bdd node with a specified mask. man1/alc_origin.1
unsetbddrefext (3)   - increments the internal reference, and decrements the external reference of a bdd node. man1/alc_origin.1
upVarBdd (3)         - brings up an index in a BDD
upVarCct (3)         - brings up the index of a primary input within a circuit
upstr (3)            - convert a string to upper case man1/alc_origin.1
vhdlablname (3)      - returns a compatible VHDL name. man1/alc_origin.1
vhdlablvector (3)    - gives the index and the name of a vectorized name. man1/alc_origin.1
viambkrds (3)        - adds to RDS figure a contact from a MBK figure man1/alc_origin.1
viewablexpr (3)      - displays an expression. man1/alc_origin.1
viewablexprfile (3)  - displays an expression in a file. man1/alc_origin.1
viewablexprstr (3)   - displays an expression in a str. man1/alc_origin.1
viewbddcircuit (3)   - displays a bdd circuit. man1/alc_origin.1
viewbddnode (3)      - displays a bdd node. man1/alc_origin.1
viewbddsystem (3)    - displays a bdd system. man1/alc_origin.1
viewbddsysteminfo (3) - displays statistical informations. man1/alc_origin.1
viewht (3)           - displays a hash table contents man1/alc_origin.1
viewlo (3)           - scan all lofig_lists and display their elements man1/alc_origin.1
viewlofig (3)        - display elements of a lofig_list man1/alc_origin.1
viewlofigcon (3)     - display elements of a locon_list attached to a figure
viewloins (3)        - display elements of a loins_list man1/alc_origin.1
viewloinscon (3)     - display elements of a locon_list attached to an instance man1/alc_origin.1
viewlosig (3)        - display elements of a losig_list man1/alc_origin.1
viewlotrs (3)        - display elements of a lotrs_list man1/alc_origin.1
viewph (3)           - display all the phfig_lists and their elements man1/alc_origin.1
viewphcon (3)        - display elements of a phcon_list man1/alc_origin.1
viewphfig (3)        - display elements of a phfig_list
viewphins (3)        - display elements of a phins_list man1/alc_origin.1
viewphref (3)        - display elements of a phref_list man1/alc_origin.1
viewphseg (3)        - display elements of a phseg_list man1/alc_origin.1
viewphvia (3)        - display elements of a phvia_list
viewrdsfig (3)       - view caracteristics of a figure man1/alc_origin.1
viewrdsins (3)       - Displays caracteristics of an instance man1/alc_origin.1
viewrdsparam (3)     - displays tables in memory filled by loadrdsparam function. man1/alc_origin.1
viewrdsrec (3)       - Displays caracteristics of a rectangle man1/alc_origin.1
viewrdswindow (3)    - displays caracteristics of the windowing. man1/alc_origin.1
viewrfmcon (3)       - displays connector caracteristics in MBK and RDS format. man1/alc_origin.1
viewrfmfig (3)       - displays figure caracteristics in MBK and RDS format. man1/alc_origin.1
viewrfmins (3)       - displays instance caracteristics in MBK and RDS format. man1/alc_origin.1
viewrfmrec (3)       - displays rectangle caracteristics in RDS format. man1/alc_origin.1
viewrfmref (3)       - displays reference caracteristics in MBK and RDS format. man1/alc_origin.1
viewrfmseg (3)       - displays segment caracteristics in MBK and RDS format. man1/alc_origin.1
viewrfmvia (3)       - displays contact caracteristics in MBK and RDS format. man1/alc_origin.1
xyflat (3)           - compute hierarchical coordinates man1/alc_origin.1
