;  ###----------------------------------------------------------------###
;  #									#
;  # file	: exc001.u						#
;  # date	: Apr  1 1993						#
;  # descr.	: functional test for dlx				#
;  #									#
;  ###----------------------------------------------------------------###

	;  ###--------------------------------------------------------###
	;  #   exceptions :						#
	;  #     - data address miss alignment (when storing a word)	#
	;  ###--------------------------------------------------------###

adr		equ	X"00000051"		; miss aligned word address
data		equ	X"9043ad6b"		; data

		org	X"7fffff00"
		start	init

init:
		loadi	r31, back_from_exception
		loadi	r1 , adr		; word's address in r1
		loadi	r2 , data		; data in r2
		loadi	r3 , data		; same data in r3
		loadi	r4 , data ^ X"ffffffff"	; complemented data in r4

	;  ###--------------------------------------------------------###
	;  #   store the word byte by byte to initialize the memory	#
	;  # location							#
	;  ###--------------------------------------------------------###

		sb	r2 , r1 , 3
		srli	r2 , r2 , 8
		sb	r2 , r1 , 2
		srli	r2 , r2 , 8
		sb	r2 , r1 , 1
		srli	r2 , r2 , 8
		sb	r2 , r1 , 0

	;  ###--------------------------------------------------------###
	;  #   store word at a miss aligned address			#
	;  ###--------------------------------------------------------###

		sw	r4 , r1 , 0		; EXCEPTION (alignment)

	;  ###--------------------------------------------------------###
	;  #   after returning from exception, read byte by byte the	#
	;  # memory location and rebuild the word to check that the	#
	;  # faulty store word has not modified the memory		#
	;  ###--------------------------------------------------------###

back_from_exception:
		lbu	r2 , r1 , 0
		slli	r5 , r2 , 8
		lbu	r2 , r1 , 1
		or	r5 , r5 , r2
		slli	r5 , r5 , 8
		lbu	r2 , r1 , 2
		or	r5 , r5 , r2
		slli	r5 , r5 , 8
		lbu	r2 , r1 , 3
		or	r5 , r5 , r2

	;  ###--------------------------------------------------------###
	;  #   if the read word is correct branch to good		#
	;  ###--------------------------------------------------------###

		seq	r11, r5, r3
		beqz	r11, bad
		nop
		j	good
		nop

		org	X"7ffffff0"
good		j	good
		nop
bad		j	bad
		nop
		end
