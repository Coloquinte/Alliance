.\"   $Id: funbinod.3,v 1.1 1999/05/31 17:30:21 alliance Exp $
.\" @(#)binode.2 108 Feb 15 1995 UPMC ; Pirouz BAZARGAN SABET
.TH FUNBINOD 3 "October 1, 1997" "ASIM/LIP6" "BEH functions"

.so man1/alc_origin.1
.SH NAME
.PP
\fBbeh_addbinode , beh_delbinode , beh_frebinode\fP

.SH SYNOPSYS
.PP
.nf
struct binode *beh_addbinode (list, cond, value)
struct binode *list;
struct node *cond;
struct node *value;

struct binode *beh_delbinode (list, pnt, mode)
struct binode *list;
struct binode *pnt;
char mode;

void beh_frebinode (list)
struct binode *list;
.fi

.SH PARAMETERS
.PP
.TP 10
\fIlist\fP
pointer of a list of binode structures
.TP 10
\fIcond\fP
bdd representing the expression of the connection condition of the driver
.TP 10
\fIvalue\fP
bdd representing the expression of the value emitted by the driver
.TP 10
\fIpnt\fP
pointer of the binode structure to be removed from the list
.TP 10
\fImode\fP
recursive mode (Y or N)

.SH DESCRIPTION
.PP
A binode is a data structure representing a one\-bit deconnectable VHDL driver.

.PP
\fBbeh_addbinode()\fP adds a binode structure at the top of a list of binode
structures. \fIcond\fP is a pointer on the bdd representing the condition that
makes the driver active. \fIvalue\fP is the bdd of the expression of the value
produced by the driver. The function returns the pointer of the new list.
No checks are made by this function.

.PP
\fBbeh_delbinode()\fP deletes a binode structure (pointed by \fIpnt\fP)
from a list of binode structures. The function returns the pointer of the new
list. No action is made if the structure pointed by \fIpnt\fP doesn't belong
to the list.

.PP
\fBbeh_frebinode()\fP deletes a list of binode structures (pointed by
\fIlist\fP). No action is made if \fIlist\fP is an empty list (NULL pointer).
No checks are made by this function.
If \fImode\fP is set to 'Y' all objects (bdd) pointed by the binode will also
be deleted. If \fImode\fP is set to 'N' and there is any object (bdd) pointed
by the structure a warning message is printed on the standard error output.

.SH EXAMPLE
.PP
.nf
#include <beh108.h>

struct binode *list;

list = beh_addbinode (list, NULL, NULL);
.fi

.SH SEE ALSO
.PP
beh(3), binode(3)


.so man1/alc_bug_report.1

