.\"   $Id: symbolicchannelrouter.3,v 1.1 1999/05/31 17:30:25 alliance Exp $
.\" @(#)SymbolicChannelRouter.1 1.0 93/07/29 ; Labo masi cao-vlsi; Author : El housseine REJOUAN
.TH SYMBOLICCHANNELROUTER 3 "October 1, 1997" "ASIM/LIP6" "APR FUNCTIONS"
.SH NAME
SymbolicChannelRouter \- routes a given channel on a symbolic grid
.so man1/alc_origin.1
.SH SYNOPSYS
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "aprnnn.h"
int \fBSymbolicChannelRouter\fP(ptNorthConList,
                            ptSouthConList,
                            ptWestConList,
                            ptEastConList,
                            ChannelWidth,
                            ChannelHeight,
                            ptHorSegList,
                            ptVerSegList,
                            ptViaList)
ConnectorList	*ptNorthConList;
ConnectorList	*ptSouthConList;
ConnectorList	*ptWestConList;
ConnectorList	*ptEastConList;
long			*ChannelWidth;
long			*ChannelHeight;
SegmentList		**ptHorSegList;
SegmentList		**ptVerSegList;
ViasList		**ptViaList;
.ft R
.fi
.SH PARAMETERS
.TP 10
\fIptNorthConList\fP
List of the connectors located on the north side of the channel.
.TP 10
\fIptSouthConList\fP
List of the connectors located on the south side of the channel.
.TP 10
\fIptWestConList\fP
List of the connectors located on the west side of the channel.
.TP 10
\fIptEastConList\fP
List of the connectors located on the east side of the channel.
.TP 10
\fIChannelWidth\fP
Width of the channel.
.TP 10
\fIChannelHeight\fP
Height of the channel.
.TP 10
\fIptHorSegList\fP
List of horizontal wires produced by the \fBSymbolicChannelRouter\fP.
.TP 10
\fIptVerSegList\fP
List of vertical wires produced by the \fBSymbolicChannelRouter\fP.
.TP 10
\fIptViaList\fP
List of vias produced by the \fBSymbolicChannelRouter\fP.
.SH DESCRIPTION
\fBSymbolicChannelRouter\fP routes a given channel on symbolic grid using a greedy algorithm.
.br
The connectors on the west and east sides are 
.br
The \fIptNorthConList\fP, \fIptSouthConList\fP, \fIptWestConList\fP and \fIptEastConList\fP
can be NULL.
.br
The \fIChannelWidth\fP is the width of the channel. It is a symbolic value.
.br
\fIChannelHeight\fP is the Height of the channel. It is a symbolic value and  it may be a value zero.
.br
The \fIptHorSegList\fP, \fIptVerSegList\fP and \fIptViaList\fP are returned by the \fBSymbolicChannelRouter\fP.
.br
The SymbolicChannelRouter structure is described  :
.nf
typedef struct SCR_ConnectorList
	{
	struct SCR_ConnectorList	*NextCon;
	long				ConName;
	long				Mark;
	} ConnectorList
.fi
.TP 10
\fINextCon\fP
Pointer to the next connector in the list.
.br
.TP 10
\fIConName\fP
Name of the connector. 
.br
.TP 10
\fIMark\fP
Connector index on a symbolic grid. 
.nf
.PP
typedef struct SCR_SegmentList
	{
	struct SCR_SegmentList	*NextSeg;
	char			*SegName;
	long			X1Seg;
	long			Y1Seg;
	long			X2Seg;
	long			Y2Seg;
	} SegmentList
.fi
.br
.TP 10
\fINextSeg\fP
Pointer to the next segment in the list.
.TP 10
\fISegName\fP
Name of the segment. 
.br
.TP 10
\fIX1Seg\fP, \fIY1Seg\fP, \fIX2Seg\fP, \fIY2Seg\fP
Coordinates of each end of the segment. Since it's a symbolic segment.
.nf
.PP
typedef struct SCR_ViasList
        {
        struct SCR_ViasList	*NextVia;
        long			XVia;
        long			YVia;
        } ViasList
.fi
.br
.TP 10
\fINextVia\fP
Pointer to the next via in the list.
.TP 10
\fIXVia\fP,\fIYVia\fP
Coordinates of the center of the via.
.PP
.br
.RE
.SH EXAMPLE
.ta 3n 6n 9n 12n 15n 18n 21n
.nf
.if n \{\
.ft B \}
.if t \{\
.ft CR \}
#include "aprnnn.h"
	if (SymbolicChannelRouter(ptNorthConList,
                                  ptSouthConList,
                                  ptWestConList,
                                  ptEastConList,
                                  &ChannelWidth,
                                  &ChannelHeight,
                                  &ptHorSegList,
                                  &ptVerSegList,
                                  &ptViaList))
	 printf("the channel width is modified;\n");
	else printf("the channel width is not modified;\n");
.ft R
.fi
.SH SEE ALSO
.BR apr(3)


.so man1/alc_bug_report.1

