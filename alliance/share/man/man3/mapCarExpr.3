.\"   $Id: mapCarExpr.3,v 1.1 1999/05/31 17:30:23 alliance Exp $
.\" @(#)mapCarExpr.2 7.01 92/08/22 ; Labo masi cao-vlsi; Author : Luc Burgun
.TH MAPCAREXPR 3 "October 1, 1997" "ASIM/LIP6" "ABL functions"
.so man1/alc_origin.1
.SH NAME
\fBmapCarExpr\fP \- creates a new expression by applying a function to all the arguments of an operator expression
.SH SYNOPSYS
.nf
#include "logmmm.h"
chain_list *mapCarExpr(func,oper,expr)
chain_list *(*func)();
short oper;
chain_list *expr;
.fi
.SH PARAMETERS
.TP 20
\fIfunc\fP
function to apply
.TP 20
\fIoper\fP
Operator number (OR,AN,XOR,NAND,NOR...).
.TP 20
\fIexpr\fP
expression from wich th new expression is deduced 
.SH DESCRIPTION
\fBmapCarExpr()\fP creates a head of an operator expression having \fIoper\fP as operator and adds the arguments calculated by applying \fIfunc()\fP to each arguments of \fIexpr\fP. \fIfunc()\fP must return an expression and must have a unique expression as argument. 
.SH EXAMPLE
.nf
#include "mutnnn.h"		/* mbk utilities */
#include "logmmm.h"
chain_list *expr1,*expr2; 
expr1 = createExpr(NOR);
addHExpr(expr1,createAtom("a"));
addHExpr(expr1,createAtom("b"));

		/* it looks like Morgan's Law... */

expr2 = mapCarExpr(notExpr,AND,expr1);
displayExpr(expr2);	
/* it will display
(AND (NOT b) (NOT a))
*/
freeExpr(expr1);
freeExpr(expr2);
.fi
.SH SEE ALSO
.BR log (1),
.BR abl (1),
.BR mapExpr (3),
.BR anyExpr (3),
.BR everyExpr (3).

.so man1/alc_bug_report.1

