.\"   $Id: everyExpr.3,v 1.1 1999/05/31 17:30:20 alliance Exp $
.\" @(#)everyExpr.2 7.01 92/08/22 ; Labo masi cao-vlsi; Author : Luc Burgun
.TH EVERYEXPR 3 "October 1, 1997" "ASIM/LIP6" "ABL functions"
.so man1/alc_origin.1
.SH NAME
\fBeveryExpr\fP \- returns the value of a logical AND applied on the results of the application of a function on the argument of an operator expression. 
.SH SYNOPSYS
.nf
#include "logmmm.h"
int everyExpr(func,expr)
int (*func)();
chain_list *expr;
.fi
.SH PARAMETERS
.TP 20
\fIfunc\fP
function to apply
.TP 20
\fIexpr\fP
expression
.SH DESCRIPTION
\fBeveryExpr()\fP applies a boolean function \fIfunc()\fP to all th arguments of \fIexpr\fP and computes a logical AND. \fIfunc()\fP must be an \fIinteger\fP function that is false if 0 is returned and true otherwise and must have an expression as argument. 
.SH EXAMPLE
.nf
#include "mutnnn.h"		/* mbk utilities */
#include "logmmm.h"
chain_list *expr;
expr = createExpr(XOR);
addQExpr(expr,createAtom("a"));
addQExpr(expr,createAtom("b"));
	/* \fIprofExpr\fP returns 0 when \fIexpr\fP is an atomic expression */
if (everyExpr(profExpr,expr))
   printf("expr is only made up of operator expressions");
freeExpr(expr);
.fi
.SH SEE ALSO
.BR log (1),
.BR abl (1),
.BR anyExpr (3),
.BR mapExpr (3),
.BR mapCarExpr (3).

.so man1/alc_bug_report.1

