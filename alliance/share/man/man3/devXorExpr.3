.\"   $Id: devXorExpr.3,v 1.1 1999/05/31 17:30:20 alliance Exp $
.\" @(#)devXorExpr.2 7.01 92/08/22 ; Labo masi cao-vlsi; Author : Luc Burgun
.TH DEVXOREXPR 3 "October 1, 1997" "ASIM/LIP6" "ABL functions"
.so man1/alc_origin.1
.SH NAME
\fBdevXorExpr\fP \- removes XOR in an expression 
.SH SYNOPSYS
.nf
#include "logmmm.h"
chain_list *devXorExpr(expr)
chain_list *expr;
.fi
.SH PARAMETER
.TP 20
\fIexpr\fP
expression to convert
.SH DESCRIPTION
\fBdevXorExpr()\fP removes XOR in \fIexpr\fP by recursively calling the \fBdevXor2Expr()\fP function. 
.SH EXAMPLE
.nf
#include "mutnnn.h"		/* mbk utilities */
#include "logmmm.h"
chain_list *expr1,*expr2; 

/* let's suppose that expr1 = (XOR a b c) */

expr2 = devXorExpr(expr1); 
displayExpr(expr2);
/* it will display
(OR (AND (NOT a) (OR (AND b (NOT c)) (AND (NOT b) c)))
    (AND a (NOT (OR (AND b (NOT c)) (AND (NOT b) c)))))  
*/
freeExpr(expr1);
freeExpr(expr2);
.fi
.SH SEE ALSO
.BR log (1),
.BR abl (1),
.BR devXor2Expr (3),
.BR simplifNotExpr (3),
.BR notExpr (3),
.BR flatPolarityExpr (3),
.BR flatArityExpr (3),
.BR sortExpr(3),
.BR normExpr(3).

.so man1/alc_bug_report.1

