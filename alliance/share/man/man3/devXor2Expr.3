.\"   $Id: devXor2Expr.3,v 1.1 1999/05/31 17:30:20 alliance Exp $
.\" @(#)devXor2Expr.2 7.01 92/08/22 ; Labo masi cao-vlsi; Author : Luc Burgun
.TH DEVXOR2EXPR 3 "October 1, 1997" "ASIM/LIP6" "ABL functions"
.so man1/alc_origin.1
.SH NAME
\fBdevXor2Expr\fP \- converts XOR 2 to OR-AND 
.SH SYNOPSYS
.nf
#include "logmmm.h"
chain_list *devXor2Expr(expr)
chain_list *expr;
.fi
.SH PARAMETER
.TP 20
\fIexpr\fP
XOR expression 
.SH DESCRIPTION
\fBdevXor2Expr()\fP removes XOR 2 at the first level by applying the rule :
.br
.TP
(XOR a b) --> (OR (AND a (NOT b)) (AND (NOT a) b))
.SH EXAMPLE
.nf
#include "mutnnn.h"		/* mbk utilities */
#include "logmmm.h"
chain_list *expr1,*expr2; 

/* let's suppose that expr1 = (XOR a b) */

expr2 = devXor2Expr(expr1); 
displayExpr(expr2);
/* it will display
(OR (AND a (NOT b)) (AND (NOT a) b))
*/
freeExpr(expr1);
freeExpr(expr2);
.fi
.SH SEE ALSO
.BR log (1),
.BR abl (1),
.BR devXorExpr (3),
.BR simplifNotExpr (3),
.BR notExpr (3),
.BR flatPolarityExpr (3),
.BR flatArityExpr (3),
.BR sortExpr(3),
.BR normExpr(3).

.so man1/alc_bug_report.1

