.\"   $Id: beout.3,v 1.1 1999/05/31 17:30:19 alliance Exp $
.\" @(#)beout.2 108 Feb 15 1995 UPMC; Pirouz BAZARGAN SABET
.TH BEOUT 3 "October 1, 1997" "ASIM/LIP6" "cao\-vlsi reference manual"

.so man1/alc_origin.1
.SH NAME
.PP
\fBbeout\fP - BEH data structure

.SH DESCRIPTION
.PP
\fIbeout\fP is a data structure used in \fBBEH\fP to represent a one\-bit
simple output port. A port is considered as a simple output when its value
is set by one and only one driver from the inside of the circuit.
For an array, each element is represented by a single structure.
These are organized in the reverse order of the array\'s range declaration.
\fIbeout\fP has been designed to be used in a simply chained list.

.PP
A \fIbeout\fP structure is composed of the following fields.

.TP 25
\fI(char *) NAME\fP
the port\'s name. For an array\'s element, the name is the array\'s identifier
added to the element\'s index seperated by a \' \' (blank space).
This string is supposed been produced by \fBnamealloc()\fP
.TP 25
\fI(struct chain *) ABL\fP
port\'s expression represented by an ABL
.TP 25
\fI(struct node *) BDD\fP
port\'s expression represented by a BDD
.TP 25
\fI(struct beout *) NEXT\fP
next port

.SH SEE ALSO
.PP
log(1), beh(3), beh_addbeout(3), beh_delbeout(3), beh_frebeout(3),
beh_rmvbeout(3), namealloc(3)


.so man1/alc_bug_report.1

