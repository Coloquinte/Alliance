.\"   $Id: notExpr.3,v 1.1 1999/05/31 17:30:23 alliance Exp $
.\" @(#)notExpr.2 7.01 92/08/22 ; Labo masi cao-vlsi; Author : Luc Burgun
.TH NOTEXPR 3 "October 1, 1997" "ASIM/LIP6" "ABL functions"
.so man1/alc_origin.1
.SH NAME
\fBnotExpr\fP \- complements an expressio and eventually does a simplification
.SH SYNOPSYS
.nf
#include "logmmm.h"
chain_list *notExpr(expr)
chain_list *expr;
.fi
.SH PARAMETER
.TP 20
\fIexpr\fP
expression to complement
.SH DESCRIPTION
\fBnotExpr()\fP complements \fIexpr\fP as follows : if \fIexpr\fP has a NOT as head operator, \fBnotExpr\fP removes it by simplification, if it doesn't, \fBnotExpr\fP adds an inverter before \fIexpr\fP. You mustn't free \fIexpr\fP because \fBnotExpr()\fP makes a physical modification on \fIexpr\fP so that it becomes undefined after this function call.
.SH EXAMPLE
.nf
#include "mutnnn.h"		/* mbk utilities */
#include "logmmm.h"
chain_list *expr1,*expr2; 
expr1 = createExpr(NOT);
addQExpr(expr1,createAtom("var1"));
expr2 = notExpr(expr1);   	/* expr1 becomes undefined */
displayExpr(expr2);

/* it will display
var1
*/
freeExpr(expr2);		/* don't free expr1 ! */
.fi
.SH SEE ALSO
.BR log (1),
.BR abl (1),
.BR createAtom (3),
.BR createExpr (3),
.BR createBinExpr (3),
.BR addQExpr (3),
.BR addHExpr(3),
.BR freeExpr(3).

.so man1/alc_bug_report.1

