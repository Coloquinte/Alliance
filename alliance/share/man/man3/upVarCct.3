.\"   $Id: upVarCct.3,v 1.1 1999/05/31 17:30:25 alliance Exp $
.\" @(#)upVarCct.2 7.01 92/08/22 ; Labo masi cao-vlsi; Author : Luc Burgun
.TH UPVARCCT 3 "October 1, 1997" "ASIM/LIP6" "BDD functions"
.so man1/alc_origin.1
.SH NAME
\fBupVarCct\fP \- brings up the index of a primary input within a circuit 
.SH SYNOPSYS
.nf
#include "logmmm.h"
void upVarCct(pC,index1,index2)
pCircuit pC;
short index1,index2;
.fi
.SH PARAMETERS
.TP 20
\fIpC\fP
Circuit in which the index is bring up 
.TP 20
\fIindex1\fP
old index
.TP 20
\fIindex2\fP
new index
.SH DESCRIPTION
\fBupVarCct()\fP brings up \fIindex1\fP back to \fIindex2\fP. this function provides the basic method for the BDD reorder.
.SH EXAMPLE
.nf
#include "mutnnn.h"		/* mbk utilities */
#include "logmmm.h"
chain_list *expr;
pNode res;
pCircuit pC;

initializeBdd(SMALL_BDD);
pC = initializeCct("circuit 1",10,10);

addInputCct(pC,"a");
addInputCct(pC,"b");

addOutputCct(pC,"s",applyBinBdd(XOR,
                        createNodeTermBdd(searchInputCct(pC,"a")),
                        createNodeTermBdd(searchInputCct(pC,"b"))));

upVarCct(pC,2,4);

displayCct(pC,1);

/* it will display 
************* DISPLAY circuit 1 *********
INPUT = b	INDEX = 3 
INPUT = a	INDEX = 4 
----------- NUMBER OF INPUTS = 2
OUTPUT = s	s = (XOR b a)
----------- NUMBER OF OUTPUTS = 1
*****************************************
*/

destroyCct(pC);
destroyBdd();
.fi
.SH ERROR
"upVarCct : error - old index is higher than new index"
.br
The new index must be higher than the old index.
.SH SEE ALSO
.BR log (1),
.BR bdd (1),
.BR abl (1),
.BR constraintCct (3),
.BR composeCct (3).

.so man1/alc_bug_report.1

