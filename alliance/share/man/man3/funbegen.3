.\"   $Id: funbegen.3,v 1.1 1999/05/31 17:30:21 alliance Exp $
.\" @(#)begen.2 108 Feb 15 1995 UPMC ; Pirouz BAZARGAN SABET
.TH FUNBEGEN 3 "October 1, 1997" "ASIM/LIP6" "BEH functions"

.so man1/alc_origin.1
.SH NAME
.PP
\fBbeh_addbegen , beh_delbegen , beh_rmvbegen , beh_frebegen\fP

.SH SYNOPSYS
.PP
.nf
struct begen *beh_addbegen (list, name, type, value)
struct begen *list;
char *name;
char *type;
void *value;

struct begen *beh_delbegen (list, pnt, mode)
struct begen *list;
struct begen *pnt;
char mode;

struct begen *beh_rmvbegen (list, name, mode)
struct begen *list;
char *name;
char mode;

void beh_frebegen (list)
struct begen *list;
.fi

.SH PARAMETERS
.PP
.TP 10
\fIlist\fP
pointer of a list of begen structures
.TP 10
\fIname\fP
name of the generic to be added to or removed from the list
.TP 10
\fIpnt\fP
pointer of the begen structure to be removed from the list
.TP 10
\fItype\fP
type of the generic
.TP 10
\fItype\fP
type of the generic (integer, bit, natural, ...)
.TP 10
\fIvalue\fP
pointer on the structure representing the value of the genereic
.TP 10
\fImode\fP
recursive mode (Y or N)

.SH DESCRIPTION
.PP
A begen is a data structure representing a constant value relative to a circuit.

.PP
\fBbeh_addbegen()\fP adds a begen structure at the top of a list of begen
structures. The name registred in the begen structure is produced by
\fBnamealloc()\fP. The function returns the pointer of the new list.
No checks are made by this function.

.PP
\fBbeh_delbegen()\fP deletes a begen structure (pointed by \fIpnt\fP)
from a list of begen structures. The function returns the pointer of the new
list. No action is made if the structure pointed by \fIpnt\fP doesn't belong
to the list. If \fImode\fP is set to 'Y' all objects pointed by the begen will
also be removed. If \fImode\fP is set to 'N' and there is any object pointed
by the begen a warning message is printed on the standard error output.

.PP
\fBbeh_rmvbegen()\fP deletes a begen structure (named \fIname\fP) from a list
of begen structures. \fIname\fP is supposed to be produced by \fBnamealloc()\fP.
The function returns the pointer of the new list.
No action is made if no structure named \fIname\fP has been found in the list.
If \fImode\fP is set to 'Y' all objects pointed by the begen will also
be removed. If \fImode\fP is set to 'N' and there is any object pointed
by the begen a warning message is printed on the standard error output.

.PP
\fBbeh_frebegen()\fP deletes a list of begen structures (pointed by
\fIlist\fP). No action is made if \fIlist\fP is an empty list (NULL pointer).
No checks are made by this function.

.SH EXAMPLE
.PP
.nf
#include <beh108.h>

struct begen *list;

list = beh_addbegen (list,"surface","natural",600);
.fi

.SH SEE ALSO
.PP
beh(3), begen(3), namealloc(3)


.so man1/alc_bug_report.1

