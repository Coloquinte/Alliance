.\"   $Id: funbefig.3,v 1.1 1999/05/31 17:30:21 alliance Exp $
.\" @(#)befig.2 108 Feb 15 1995 UPMC ; Pirouz BAZARGAN SABET
.TH FUNBEFIG 3 "October 1, 1997" "ASIM/LIP6" "BEH functions"

.so man1/alc_origin.1
.SH NAME
.PP
\fBbeh_addbefig , beh_delbefig , beh_rmvbefig , beh_frebefig\fP

.SH SYNOPSYS
.PP
.nf
struct befig *beh_addbefig (list, name)
struct befig *list;
char *name;

struct befig *beh_delbefig (list, pnt, mode)
struct befig *list;
struct befig *pnt;
char mode;

struct befig *beh_rmvbefig (list, name, mode)
struct befig *list;
char *name;
char mode;

void beh_frebefig (list)
struct befig *list;
.fi

.SH PARAMETERS
.PP
.TP 10
\fIlist\fP
pointer of a list of befig structures
.TP 10
\fIname\fP
name of the behavioural figure to be added to or removed from the list
\fIpnt\fP
pointer of the befig structure to be removed from the list
.TP 10
\fIpnt\fP
pointer of the befig to be removed form the list
.TP 10
\fImode\fP
recursive mode (Y or N)

.SH DESCRIPTION
.PP
A befig is a data structure representing a complete behavioural description of a
circuit.

.PP
\fBbeh_addbefig()\fP adds a befig structure at the top of a list of befig
structures. The name registred in the befig structure is produced by
\fBnamealloc()\fP. The function returns the pointer of the new list.
No checks are made by this function.

.PP
\fBbeh_delbefig()\fP deletes a befig structure (pointed by \fIpnt\fP) from a
list of befig structures. The function returns the pointer of the new list.
No action is made if the structure pointed by \fIpnt\fP doesn't belong to the
list. If \fImode\fP is set to 'Y' all objects (berin, bepor, bemsg, beout,
bereg, bebus, bebux, beaux, binode, biabl, abl) pointed by the befig will also
be deleted. If \fImode\fP is set to 'N' and there is any object pointed
by the structure a warning message is printed on the standard error output.

.PP
\fBbeh_rmvbefig()\fP deletes a befig structure (named \fIname\fP) from a list
of befig structures. \fIname\fP is supposed to be produced by \fBnamealloc()\fP.
The function returns the pointer of the new list.
No action is made if no structure named \fIname\fP has been found in the list.
If \fImode\fP is set to 'Y' all objects (berin, bepor, bemsg, beout, bereg,
bebus, bebux, beaux, binode, biabl, abl) pointed by the befig will also
be deleted. If \fImode\fP is set to 'N' and there is any object pointed
by the structure a warning message is printed on the standard error output.

.PP
\fBbeh_frebefig()\fP deletes a list of befig structures (pointed by
\fIlist\fP) and all objects pointed by any of befig structures of the list.
No action is made if \fIlist\fP is an empty list (NULL pointer).
No checks are made by this function.

.SH EXAMPLE
.PP
.nf
#include <beh108.h>

struct befig *list;
char *name;

name = namealloc ("adder");
list = beh_addbefig (list,"amd2901");
list = beh_rmvbefig (list,name);
.fi

.SH SEE ALSO
.PP
beh(3), befig(3), namealloc(3)


.so man1/alc_bug_report.1

