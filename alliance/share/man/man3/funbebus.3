.\"   $Id: funbebus.3,v 1.1 1999/05/31 17:30:21 alliance Exp $
.\" @(#)bebus.2 108 Feb 15 1995 UPMC ; Pirouz BAZARGAN SABET
.TH FUNBEBUS 3 "October 1, 1997" "ASIM/LIP6" "BEH functions"

.so man1/alc_origin.1
.SH NAME
.PP
\fBbeh_addbebus , beh_delbebus , beh_rmvbebus , beh_frebebus\fP

.SH SYNOPSYS
.PP
.nf
struct bebus *beh_addbebus (list, name, biabl, bibdd, type)
struct bebus *list;
char *name;
struct biabl *biabl;
struct binode *bibdd;
char type;

struct bebus *beh_delbebus (list, pnt, mode)
struct bebus *list;
struct bebus *pnt;
char mode;

struct bebus *beh_rmvbebus (list, name, mode)
struct bebus *list;
char *name;
char mode;

void beh_frebebus (list)
struct bebus *list;
.fi

.SH PARAMETERS
.PP
.TP 10
\fIlist\fP
pointer of a list of bebus structures
.TP 10
\fIname\fP
name of the bused output port to be added to or removed from the list
.TP 10
\fIbiabl\fP
list of biabl representing the expression of drivers setting the value of
the bused output port
.TP 10
\fIbibdd\fP
list of bibdd representing the expression of drivers setting the value of
the bused output port
.TP 10
\fIpnt\fP
pointer of the bebus structure to be removed from the list
.TP 10
\fItype\fP
type of the bused output port :
.RS
.TP 5
W
for a WOR_BIT
.TP 5
M
for a MUX_BIT
.RE
.TP 10
\fImode\fP
recursive mode (Y or N)

.SH DESCRIPTION
.PP
A bebus is a data structure representing a one\-bit bused output port.

.PP
\fBbeh_addbebus()\fP adds a bebus structure at the top of a list of bebus
structures. The name registred in the bebus structure is produced by
\fBnamealloc()\fP. The function returns the pointer of the new list.
No checks are made by this function.

.PP
\fBbeh_delbebus()\fP deletes a bebus structure (pointed by \fIpnt\fP) from a
list of bebus structures. The function returns the pointer of the new list.
No action is made if the structure pointed by \fIpnt\fP doesn't belong to the
list. If \fImode\fP is set to 'Y' all objects (biabl, binode) pointed by the
bebus will also be deleted. If \fImode\fP is set to 'N' and there is any object
(biabl, binode) pointed by the bebus, a warning message is printed on the
standard error output.

.PP
\fBbeh_rmvbebus()\fP deletes a bebus structure (named \fIname\fP) from a list
of bebus structures. \fIname\fP is supposed to be produced by \fBnamealloc()\fP.
The function returns the pointer of the new list.
No action is made if no structure named \fIname\fP has been found in the list.
If \fImode\fP is set to 'Y' all objects (biabl, binode) pointed by the bebus
will also be deleted. If \fImode\fP is set to 'N' and there is any object
(biabl, binode) pointed by the bebus, a warning message is printed on the
standard error output.

.PP
\fBbeh_frebebus()\fP deletes a list of bebus structures (pointed by
\fIlist\fP) and all objects (biabl, binode) pointed by any bebus structure of
the list. No action is made if \fIlist\fP is an empty list (NULL pointer).
No checks are made by this function.

.SH EXAMPLE
.PP
.nf
#include <beh108.h>

struct bebus *list;
char *name;

name = namealloc ("data_bus_0");
list = beh_addbebus (list,"result_bus_0", NULL, NULL, 'M');
list = beh_rmvbebus (list,name);
.fi

.SH SEE ALSO
.PP
beh(3), log(1), biabl(3), binode(3), bebus(3), namealloc(3)


.so man1/alc_bug_report.1

