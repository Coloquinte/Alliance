.\" 
.\" This file is part of the Alliance CAD System
.\" Copyright (C) Laboratoire LIP6 - Département ASIM
.\" Universite Pierre et Marie Curie
.\" 
.\" Home page          : http://www-asim.lip6.fr/alliance/
.\" E-mail support     : mailto:alliance-support@asim.lip6.fr
.\" 
.\" This progam is  free software; you can redistribute it  and/or modify it
.\" under the  terms of the GNU  General Public License as  published by the
.\" Free Software Foundation;  either version 2 of the License,  or (at your
.\" option) any later version.
.\" 
.\" Alliance VLSI  CAD System  is distributed  in the hope  that it  will be
.\" useful, but WITHOUT  ANY WARRANTY; without even the  implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
.\" Public License for more details.
.\" 
.\" You should have received a copy  of the GNU General Public License along
.\" with the GNU C Library; see the  file COPYING. If not, write to the Free
.\" Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
.\" 

.\" 
.\" Tool    : Man pages
.\" Date    : 1991,92,2000
.\" Author  : Luc Burgun, Pascale Allegre, Nathalie Dictus
.\" Modified by Czo <Olivier.Sirol@lip6.fr> 1996,97
.\" Modified by francois Donnet 2000
.\" 
.\" 
.\" 
.\" 
.\" 
.pl -.4
.TH BOOG 1 "Jun 29 2000"  "ASIM/LIP6" "CAO\-VLSI Reference Manual"
.SH NAME
.TP
BooG \- Binding and Optimizing On Gates.


.so man1/alc_origin.1

.SH SYNOPSIS
.TP
\f4boog\fP  \fIinput_file\fP \fIoutput_file\fP  [\fIlax_file\fP]
\f4boog\fP  \-h
\f4boog\fP  [\-v] [\-m \fImode\fP] \fIinput_file\fP [\-o \fIoutput_file\fP] [\-l \fIlax_file\fP]
\f4boog\fP  [\-m \fImode\fP] \fIinput_file\fP \-d \fIdebug_file\fP\n\
.br

.SH DESCRIPTION
.br
Boog is a mapper of a behavioural description onto a standard cell library.
.br
\fB  Input description\fP
.br

.br
The logic level behavioural description (.vbe file) uses the same VHDL subset as the logic simulator \fBasimut\fP, the FSM synthesizer \fBsyf\fP, the functional abstractor \fByagle\fP and the formal prover \fBproof\fP (for further information about the subset of VHDL, see the "vbe" manual). 
.br
A special feature has been introduced in the VHDL subset in order to allow the don't care description for external outputs and internal registers : A bit signal can take the 'd' value. 
This value is interpreted as a '0' by the logic simulator \fBasimut\fP. 
Don't Cares are automatically generated by \fBsyf\fP in the resulting '.vbe' file.
.br
For the register signal, only one signal can appear in a guarded expression since the STABLE attribute is used. This attribute is only supported by technology mapping onto a standard cell library as \fBsxlib\fP. Indeed you can associate a write enable signal in condition register. To resume only 2 descriptions are accepted as followed:
\fIlabel: BLOCK (NOT ck 'STABLE and ck='1')
.nf
# Example
BEGIN
   reg <= expr;
END BLOCK;\fP
or
\fIlabel: BLOCK (NOT ck 'STABLE and ck='1' and wen='1')
BEGIN
   reg <= expr;
END BLOCK;\fP
.fi
.ti 7

\fBboog\fP is the second step of the logic synthesis : it builds a gate network using
 a predefined standard cell library as SXLIB. 
.br

.br
\fB  Mapping with a standard cell library\fP
.br

.br
Every cell appearing in the directory defined by the environment variable MBK_TARGET_LIB may be used by \fBboog\fP since they are described as a '.vbe' file. There are some restrictions about the type of the cell used. Every cell has to have only one output. 
The cell must be characterized. The timing and area informations required by \fBboog\fP are specified in the "generic" clause of the ".vbe" file.
.br

.br
\fB  Parameter file '.lax'\fP
.br
The lax file is common with other logic synthesis tools and is used
for driving the synthesis process. 
See \fBlax\fP(5) manual for more detail.

.br
\fBlax\fP uses a lot of parameters to guide every step of the synthesis process.
Some parameters are globally used (for example, \fIoptimization level\fP whereas others are specifically used (\fBload capacitance\fP for the netlist optimization only).
Here is the default lax file (see the user's manual for further information about the syntax of the '.lax' file):
.br

.br
   Optimization mode = 3 (25% area - 75% delay)
.br
   Delayed input = 0
.br
   Early output = 0
.br
   Auxiliary signal saved = 0
.br



.SH OPTION
.TP 10
\f4\-h\fP
Help mode. Displays possible uses of \fBboog\fP.
.TP 10
\f4\-v\fP
Verbose mode. Displays timing and area informations.
.TP 10
\f4\-m mode\fP
Optimization mode. Can be defined in lax file, it's only a shortcut to define it on command line. This mode number has an array defined between \fI0\fP and \fI4\fP. It indicates the way of optimization the user wants. If \fI0\fP is chosen, the circuit area will be improved. On the other hand, \fI4\fP will improve circuit delays. \fI2\fP is a medium value for optimization.
.TP 10
\f4\-o output_file\fP
Just another way to show explicitely the \fBVST\fP output file name.
.TP 10
\f4\-l lax_file\fP
Just another way to show explicitely the \fBLAX\fP parameter file name.
.TP 10
\f4\-d debug_file\fP
Generates a \fBVBE\f debug file. It comes from internal result algorithm. Users aren't concerned.
.br

.SH ENVIRONMENT VARIABLES
.br
The following environment variables have to be set before using \fBboog\fP :
.HP
.ti 7
\fIMBK_CATA_LIB\fP gives the auxiliary paths of the directories of input files (behavioural description). 
.HP
.ti 7
\fIMBK_TARGET_LIB\fP gives the path (single) of the directory of the selected standard cell library. 
.HP
.ti 7
\fIMBK_IN_LO\fP gives the format of models instantiated in the structural description.
.HP
.ti 7
\fIMBK_OUT_LO\fP gives the output format of the structural description.


.SH EXAMPLE
.br
You can call \fBboog\fP as follows :
.br
.br
	boog alu alu



.SH SEE ALSO
.br
boog(1), scmap(1), c4map(1), xlmap(1), proof(1), yagle(1), asimut(1), vhdl(5), scr(1), sclib(1), sxlib(1).
.br


.SH DIAGNOSTICS
.br
"VHDL : Error - bad usage of the 'stable' attribut"
.br
The stable attribut must be used with only one signal in a guarded expression
.br

.so man1/alc_bug_rprt.1
