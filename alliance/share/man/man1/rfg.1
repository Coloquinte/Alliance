.\"   $Id: rfg.1,v 1.3 1999/10/13 15:28:57 franck Exp $
.\" @(#)Labo.l 6.05 99/10/12 UPMC; Author: Laurent WINCKEL
.TH RFG 1 "October 1, 1997" "ASIM/LIP6" "ALLIANCE USER COMMANDS"
.SH NAME
rfg \- register file generator - version 6.05
.SH SYNOPSIS
.B rfg
.br

.B rfg
.B -h
.br

.B rfg
.I bits words busses ro|rs|ds|ba
.br
.B [ -ffd ] 
.B [ -ffu ] 
.B [ -id ] 
.B [ -lp ] 
.B [ -wel|-weh ] 
.B [ -stuck ]
.br
.B [ -virtual ]
.B [ -msb0 ]
.br
.B [ -layout ]
.B [ -icon ]
.B [ -vhdl ]
.B [ -patterns ]
.B [ -datasheet ]
.br
.B [ -physical_box ]
.B [ -logical_box ]
.br
.B [ -o \fIblockname\fP ]
.so man1/alc_origin.1
.SH DESCRIPTION
The first form is a short on line help.
.br

The second is a long on line help.
.br

In the last form, \fBrfg\fP is a register file generator for bit-sliced
data-paths.
It generates differents views of a register file and offers a very large range
of possible parameters.
The generator respect the CAO-VLSI definition of a data-path.
The slice is fixed to 60
lambdas, allows virtual terminals and could be used with the data-path
compiler
.BR fitpath (1).
.LP
The generator needs a leaf cell library to work well.
The \fBMBK_CATA_LIB\fP(1) environment variable should contain the path to
the generator library, \fIrflib\fP.
.SH OPTIONS
.TP 25
.B -h
long form help.
.TP
.I bits
Word size. The range is from 2 to 64, the value must be even.
.TP
.I words
Number of registers. The range is from 2 to 256, the value must be even.
.TP
.I busses
Number of read busses : 1 or 2. Generated register file has one write address bus and one or two read address busses.
.TP
.B ro
Generates a block without address decoders, with an optimized width.
.TP
.B rs
Generates a block without address decoders, that could be abutted with a decoders block.
.TP
.B ds
Generates a block that contains only the address decoders.
This block has the same size and the same connectors interface as the block generated with the \fIrs\fP option.
.TP
.B ba
Generates a complete register file with address decoders.
.TP
.B -ffd
Adds output latches then the generated register file work like a falling edge triggered flip-flop rather than a level sensitive latch.
.TP
.B -ffu
Adds output latches then the generated register file work like a rizing edge triggered flip-flop rather than a level sensitive latch.
.TP
.B -id
Inverts data polarity between input bus and output busses.
.TP
.B -lp
Reduces consumption but increases read time. This option is only available for register file which have more than 16 registers.
.TP
.B -wel
Adds a write enable signal. The signal is active low.
.TP
.B -weh
Adds a write enable signal. The signal is active high.
.TP
.B -stuck
The register at address 0 will be stuck to a value of 0.
.TP
.B -virtual
Generates a register file with virtual connectors, as opposed to the default
that generates steady terminals, to be used by the data-path compiler
\fPfitpath\fP(1).
.TP
.B -msb0
Index 0 of vectorized busses will be used for the most significant bit, else index 0 will be used for the less significant bit of busses.
.TP
.B -layout
To obtain a layout view.
The different formats are given by
.BR mbk (1)
documentation.
.TP
.B -icon
To obtain a icon view.
.TP
.B -vhdl
To obtain a VHDL data-flow behavioral description view.
.TP
.B -patterns
To obtain a patterns file.
.TP
.B -datasheet
To obtain a data sheet.
.TP
.B -physical_box
To obtain a physical outline view. Cannot be used with the -layout option.
.TP
.B -logical_box
To obtain a netlist view. This view contains only the logical block interface.
The different formats are given by
.BR mbk (1)
documentation.
.TP
.B -o \fIblockname\fP
\fIblockname\fP indicate the user name prefix for all files generated.
If no name is given, a default name will be composed by the generator.
For each set of parameters and options, the default name will be different.
.LP
Each terminal name is predefined and cannot not be modified by the user.
Index 0 could be the less significant bit or the most significant following the msb option.
\fIN\fP represent the number of bits of registers.
\fIM\fP represent the size of address busses, this size depend on number of registers.
Terminal names are :
.TP 25
\fBad_w[0]-ad_w[\fIM\fP-1]\fP
Write address
.TP
\fBwe\fP
Write enable signal
.TP
\fBad_r_a[0]-ad_r_a[\fIM\fP-1]\fP
First read address
.TP
\fBad_r_b[0]-ad_r_b[\fIM\fP-1]\fP
Second read address
.TP
\fBck_m\fP
Clock signal
.TP
\fBin_a[0]-in_a[\fIN\fP-1]\fP
Data input
.TP
\fBout_a[0]-out_a[\fIN\fP-1]\fP
First data output
.TP
\fBout_b[0]-out_b[\fIN\fP-1]\fP
Second data output
.TP
\fBvdd, vss\fP
Power supplies
.LP
The complete register file dimension are approximately :
.RS
width = words * 34 lambdas.
.br
height = (bits + 3 * busses + 6) * 60 lambdas.
.RE
.SH TIMINGS
.LP
The data sheet contains information on register file timings. 
These informations are only available for complete register file (ba option).
.br
Common timings for all register file :
.TP 10
\fBtc1\fP
Minimun width for clock high level.
.TP
\fBtc0\fP
Minimun width for clock low level.
.TP
\fBtaws\fP
Minimum set up time for write address bus before clock rising front.
.TP
\fBtawh\fP
Minimum hold time for write address bus after clock falling front.
.TP
\fBtdts\fP
Minimum set up time for data input bus before clock falling front.
.TP
\fBtdth\fP
Minimum hold time for data input bus after clock falling front.
.TP
Additionnal timings for level sensitive latch register file :
.TP
\fBtrda\fP
Maximun read access time from read address bus stabilization to data output (when write address is not equal to read address or when clock is at low level).
.TP
\fBtpd\fP
Maximum propagation delay from data in bus stabilization to data ouput bus (when write address is equal to read address and clock is at high level).
.TP
Additionnal timings for edge triggered flip-flop register file :
.TP
\fBtars\fP
Minimum set up time for read address bus before clock falling front.
.TP
\fBtarh\fP
Minimum hold time for read address bus before clock rising front.
.TP
\fBtoe\fP
Maximun read access time from clock falling front to data output.
.SH EXAMPLES
.TP
rfg 24 16 2 rs -o my_reg -physical_box
Produces the outline view of 16 registers of 24 bits with 2 read busses. The generated file name is "\fImy_reg.xx\fP".
.TP
rfg 16 32 1 ba -wel -o test -layout -vhdl
Produces the layout and vhdl views of a 32 registers of 16 bits complete register file with 1 read bus and a write enable input active at low level. The prefix name of all generated files is "\fItest\fP".
.SH OUTPUT FILES
.TP 25
\fIname\fP.\fBxx\fP
Layout, physical_box and logical_box views.
For these views, the suffixes depend on the
\fBMBK_OUT_PH\fP(1) and \fBMBK_OUT_LO\fP(1) environment variables.
The \fIname\fP is either the user name entered under the \fB-o\fP
option, or an internally generated name, as explained under the \fIOPTIONS\fP
section.
.TP
\fIname\fP.\fBicn\fP
Icon view.
.TP
\fIname\fP.\fBvbe\fP
\fIvhdl\fP behavior.
.TP
\fIname\fP.\fBpat\fP
Set of patterns for validation.
.SH ENVIRONMENT VARIABLES
.TP 25
\fBMBK_CATA_LIB\fP
contains the directory path of the register file generator leaf cell library.
This library is by default in \fB"/labo/cells/rfg"\fP, and if not,
depends upon the system administrator installation.
.TP
\fBMBK_WORK_LIB\fP
contains the directory path of the working directory, usually set to
\fB"."\fP.
.TP
\fBMBK_IN_PH\fP
contains the format of the register file generator leaf cell library.
.TP
\fBMBK_OUT_PH\fP
contains the expected format of the generated layout.
.TP
\fBMBK_OUT_LO\fP
contains the expected format of the netlist output.
.SH SEE ALSO
.BR MBK_CATA_LIB (1),
.BR MBK_WORK_LIB (1),
.BR MBK_IN_PH (1),
.BR MBK_OUT_PH (1),
.BR MBK_OUT_LO (1),
.BR mbk (1),
.BR genlib (1),
.BR vhdl (1),
.BR fitpath (1),
.BR bsg (1),
.BR grog (1),
.BR rsa (1).

.so man1/alc_bug_report.1

