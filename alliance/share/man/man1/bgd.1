.\"   $Id: bgd.1,v 1.1 1999/05/31 17:30:13 alliance Exp $
.\" @(#)Labo.l 0.0 92/07/03 UPMC; Author: Laurent WINCKEL
.TH BGD 1 "October 1, 1997" "ASIM/LIP6" "CAO\-VLSI Reference Manual"
.SH NAME
bgd \- register file generator
.SH SYNOPSIS
.B bgd
.br
.B bgd
.B -h
.br
.B bgd
.B -deco
.I crunch_name
.br
.B bgd
.I bits words busses
.br
.B [ li ] 
.B [ lo ] 
.B [ id ] 
.B [ lp ] 
.B [ wel|weh ] 
.B [ dsh|ish ] 
.B [ hc ]
.br
.B ro|rs|ds|ba
.br
.B [ name=\fIname_prefix\fP ]
.br
.B layout|outline|vhdl|data|netlist
.br
.B [ layout ]
.B [ outline ]
.B [ vhdl ]
.B [ data ]
.B [ netlist ]
.so man1/alc_origin.1
.SH AVAILABILITY
This command is available with
.B MBK/GENLIB
software installation option.
.SH DESCRIPTION
The first form is a on line help.
.br

The second is a long on line help.
.br

In the third form, 
.B bgd
decrunch prefix name who have been generated by himself.
.br

In the last form,
.B bgd
generates differents views of a register file and offers a very large range of possible parameters.
The generator respect the CAO-VLSI definition of a data-path. The slice is fixed at 60
lambdas, allows multi-acces connectors, could be used with the data-path router
.BR dpr (1).
.LP
The generator needs a library cells to well compute.
The MBK_CATA_LIB environment variable should contain the path to the library,
.IR /labo/cells/bgd .
.SH PARAMETERS AND OPTIONS
.TP
.B -h
Help (long form).
.TP
.B -deco \fIcrunch_name\fP
Name decrunch function.
.br
\fIcrunch_name\fP : XXYYYYY.
      XX    : prefix of Bank Generator bloks name.
      YYYYY : 5 charaters for parameters incoding.
.TP
.I bits
Word size. The range is from 2 to 64, the value must be even.
.TP
.I words
Number of registers. The range is from 2 to 256, the value must be even.
.TP
.I busses
Number of read busses : 1 or 2. Generated register file has one write address bus and one or two read address busses.
.TP
.B li
Adds an input latch
.TP
.B lo
Adds output latches. One latch for each output bus.
.TP
.B id
Inverts data polarity between input bus and output busses.
.TP
.B lp
Reduces consumption but increases read time. This option is only available for register file which have more than 16 registers.
.TP
.B wel
Adds a write enable signal. The signal is actif low.
.TP
.B weh
Adds a write enable signal. The signal is actif high.
.TP
.B dsh
Adds a bypass to each output bus. Data polarity between bypass inputs and outputs is preserved.
.TP
.B ish
Adds a bypass to each output bus. Data polarity between bypass inputs and outputs is inverted.
.TP
.B ro
Generates a block without address decoders, with an optimized width.
.TP
.B rs
Generates a block without address decoders, that could be abuted with a decoders block.
.TP
.B ds
Generates a block that contains only the address decoders.
This block has the same size and the same connectors interface as the block generated with the \fIrs\fP option.
.TP
.B ba
Generates a complete register file with address decoders.
.TP
.B name=\fIname_prefix\fP
\fIname_prefix\fP indicate the user name prefix for all files generated.
If no name is given, the default files prefix is : XXYYYYY
Where XX is "ro" | "rs" | "ds" | "ba" and
YYYYY is an encode of the parameter values ensuring an unique name.
.TP
.B layout
To obtain a layout view.
The different formats are given by
.BR mbk (1)
documentation.
.TP
.B outline
To obtain a outline view.
.TP
.B vhdl
To obtain a VHDL data-flow behavioural description view.
.TP
.B data
To obtain a data sheet.
.TP
.B netlist
To obtain a netlist view. This view contains only the logical block interface.
The different formats are given by
.BR mbk (1)
documentation.
.SH EXAMPLES
.TP
.B bgd "\fI 24 16 2\fB rs name=\fImy_reg\fB outline"
Produces the outline view of 16 registers of 24 bits with 2 read busses. The generated file name is "\fImy_reg.edif\fP".
.TP
.B bgd "\fI 16 32 1\fB wel ba name=\fItest\fB layout vhdl"
Produces the layout and vhdl views of a 32 registers of 16 bits complete register file with 1 read bus and a write enable input active at low level. The prefix name of all generated files is "\fItest\fP".
.SH SIGNAL NAMES
.LP
Each signal name is predefined and could not be modified by the user.
Index 0 is the most significant bit and N represent the number of bits.
M represent the size of address busses, this size depend on number of registers.
Signal names are :
.TP
ad_w[0]-ad_w[M-1]
Write address
.TP
we
Write enable signal
.TP
ad_r_a[0]-ad_r_a[M-1]
First read address
.TP
ad_r_b[0]-ad_r_b[M-1]
Second read address
.TP
c_s_a
First bypass control signal
.TP
c_s_b
Second bypass control signal
.TP
ck_m
Master clock signal
.TP
ck_s
Slave clock signal
.TP
in_a[0]-in_a[N-1]
Data input
.TP
i_s_a[0]-i_s_a[N-1]
First bypass data input
.TP
i_s_b[0]-i_s_b[N-1]
Second bypass data input
.TP
out_a[0]-out_a[N-1]
Fisrt data output
.TP
out_b[0]-out_b[N-1]
Second data output
.TP
vdd, vss
Power supplies
.LP
.SH TOPOLOGY
.TP
The complete register file dimension are approximately :
width = words * 34 lambdas.
.br
height = (bits + 3 * busses + 6) * 60 lambdas.
.SH SEE ALSO
.BR mbk (1),
.BR dpr (1),

.so man1/alc_bug_report.1

