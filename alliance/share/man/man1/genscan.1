.\"   $Id: genscan.1,v 1.1 1999/05/31 17:30:14 alliance Exp $
.\" @(#)Labo.l 0.0 92/09/24 UPMC; Author: amar GUETTAF
.pl -.4
.TH GENSCAN 1 "October 1, 1997" "ASIM/LIP6" "CAO\-VLSI Reference Manual"
.SH NAME
.TP
genscan - scan path generator
.so man1/alc_origin.1
.SH SYNOPSIS
.TP
\fBgenscan\fP \fIsource\fP \fItarget\fP [\fIoptions\fP] 
.br
.SH DESCRIPTION
\fBgenscan\fP is an automatic scan architecture generator for gate level netlists. The input netlist must be a sequential one with no scan-path or a complete and unique scan-path.\fBgenscan\fP can add a full or a partial scan-path.
.br

\fB1/ input netlist\fP
.br
The \fIsource\fP file describes the input net-list.
.br
\fBgenscan\fP supports sequential D flip-flop based net-lists. For this release the input netlist must be a gate level netlist. The netlist format can be : structural VHDL, EDIF, or ALLIANCE internal format according to the environment variable \fBMBK_IN_LO\fP.
.br

\fB2/ output netlist\fP
.br
The generated file containing the netlist with scan_path will have the name \fItarget\fP. The output format is defined by the environment variable \fBMBK_OUT_LO\fP.
.br
The scan-path architecture generation can be used in two ways. The first method consists of changing all the D flip-flop instances of the netlist with scannable ones to build a scan-path . The second one, consist on changing the order of an existant scan-path . 
.br
Some new signals may be added to the circuit interface. For sequential circuits with no scan-path we have three new signals, a \fIscan input\fP, a \fIscan output\fP, and  a \fItest\fP signal. The \fItest\fP is used to select the scan-path mode or the functional mode. For sequential circuits with already existing scan-path or already declared scan signals no signals are added.    
.br
A full or a partial scan-path can be added to a sequential netlist , the optiona \fI-s ScanOrder\fP file gives the way in which memory cells will be ordered in the scan-path. The order of the scan_path can be specified using the register identifiers (instance name), if the registers names are indexed using the underscore character and a number ( for example : \fIregister_12\fP ), the order is the growing way of the registers index. The scan-path default order is the random one. 
.br
.SH OPTIONS 
.TP 20
\fI\-n\fP
use the declared \fIscan_out\fP as the output of the scan chain. This option is useful if the output of the last DFF of the scan chain is a primary output. 
.TP 20
\fI\-s ScanOrderFile\fP
A user scan-path order can be specified using the \fIScanOrderFile\fP file. This file gives the memory cells instances names and the order in wich they will appear in the scan-path. If this file is not specified a full scan-path is added to the netlist with a register index based order or a random order. The \fIScanOrderFile\fP is a text file in which each line contains one memory cell instance name. The first instance ( top of the file) will be connected to scan input signal and the last instance (bottom of the file) will be connected to scan out signal.


.SH ENVIRONMENT
\f4genscan\fR relies on the proper setting of the following environment variables.
The first set of environment variables sets the \fBMBK\fP environment. The second set gives the names of special signals if they exist or if they must be added on the interface.The last set of environment variables give the names of D flip-flop and scannable D flip-flop models.

.TP 20
\f4MBK_CATA_LIB\fR(1)
gives the path to the cell libraries. 
.TP 20
\f4MBK_WORK_LIB\fR(1)
furnishes the path to the working directory.
.TP 20
\f4MBK_IN_LO\fR(1)
indicates the input structural file format.
.TP 20
\f4MBK_OUT_LO\fR(1)
indicates the output structural file format.

.TP 20
\f4SCIN\fR
scan input connector of the netlist.
.TP 20
\f4SCOUT\fR
scan output connector  of the netlist.
.TP 20
\f4TEST\fR
test and functional mode selection connector.This variable is defined by the signals name. 
.TP 20
\f4CLOCK\fR
netlist clock input.
.TP 20
\f4DFF\fR
D flip-flop model name and its interface organization( \fIModelName\fP : \fIDataIn\fP : \fIClock\fP : \fIDataOut\fP).
.TP 20
\f4SCAN_DFF\fR
scannable D flip-flop model name and its interface organization( \fIModelName\fP : \fIDataIn\fP : \fIScanIn\fP : \fIScanEnable\fP : \fIClock\fP : \fIDataOut\fP). The test signal is connected to the ScanEnable input. 

.SH EXAMPLES
To use \fBgenscan\fP, some environment variables must be set :
.br
If the ALLIANCE format is used, the user must have the following environment:
.br
.BR 	MBK_CATA_LIB 
=/labo/cells/sclib
.br
.BR 	MBK_IN_LO 
=vst
.br
.BR 	MBK_OUT_LO 
=vst
.br
.BR 	MBK_WORK_LIB 
=. 
.br
.BR 	MBK_VDD 
=vdd 
.br
.BR 	MBK_VSS 
=vss 
.br
According to the netlist we have for example the following environement variables:
.br
.BR SCIN 
=scin
.br
.BR 	SCOUT 
=scout
.br
.BR 	TEST 
=test 
.br
.BR 	CLOCK 
=clk 
.br
.br 
For using sclib library we have:
.br
.BR 	DFF 
=ms_y:i:l:t 
.br
.BR 	SCAN_DFF 
=ms2_y:di:si:se:l:t 
.br
The command line to be executed for adding a scan-path architecture  with a default order to the circuit called, for example, "automate" is:
.br
.TP
\fBgenscan\fP automate automate_scan 
.br
The input netlist will be the file \fIautomate.vst\fP
.br
The resulting file will be \fIautomate_scan.vst\fP
.br
.TP
\fBgenscan\fP ctrl ctrl_scan -s order 
.br
This command allows to add a scan path to the circuit called \fIctrl\fP with the order defined by the input file \fIorder\fP , the result netlist is ctrl_scan.The content of the file \fIorder\fP is:
.br
.br 
       state_0
.br
       state_2
.br
       state_1
.br
       state_3
.br
.br
The memory cell \fIstate_0\fP will be the first cell in the scan-path and the cell \fIsatate_3\fP is the last one.
.br
.SH SEE ALSO
.BR mbkenv (3).


.SH DIAGNOSTICS
.br
.BR 1/ 
\fIModel ... not found !!\fP
.br
The model defined by an environment variable doesn't exist in the library.
.br

.BR 2/ 
\fIConnector names discrepency on model ...\fP
.br
When the connectors names of a defined model ( defined by the environment variable) are different from those of the model  in the library.
.br

.BR 3/ 
\fICan't extract scan-path\fP
.br
There is no active path between scan input and scan output signals.
.br


.so man1/alc_bug_report.1

