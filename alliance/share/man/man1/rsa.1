.\"   $Id: rsa.1,v 1.1 1999/05/31 17:30:14 alliance Exp $
.\" @(#)Labo.l 0.0 91/04/02 UPMC; Author: Luis LUCAS
.TH RSA 1 "October 1, 1997" "ASIM/LIP6" "ALLIANCE USER COMMANDS"
.SH NAME
rsa \- Recurrence Solver Adder generator
.SH SYNOPSIS
.B rsa
.I bits
.B [ -cin ] [ -cout ] [ -overn ] [ -not ]
.B [ -csa ] [ -sub ] [ -addsub ]
.B [ -over ] [ -deci ] [ -stretch ] [ -stretch2 ]
.B [ -msb0 ] [ -virtual ]
.B [ -layout ] [ -icon ] [ -vhdl ] [ -patterns ] [ -datasheet ]
.B [ -physicalbox ] [ -logicalbox ] [ -perf ]
.B [ -o \fIblockname\fB ]\fP
.so man1/alc_origin.1
.SH DESCRIPTION
.B rsa
is a fast adder generator for bit-sliced data-paths.
The slice is fixed to 60 lambdas, allows virtual terminals, and could be
used with the data-path compiler
.BR fitpath (1).
The algorithm used is a binary carry-look-ahead adder (Recurrence Solver Adder)
to offer the highest performance.
The technology employed is CMOS 5V nwell process.
.LP
Each signal name is predefined and can not be modified by the user.
Each signal name suffixed by
.I _n
indicates that the polarity signal is complemented.
Index 0 is the most significant bit when \fB-msb0\fP is specified and
.I bits
represent the number of bits.
Signal names are :
.TP 20
a[0]-a[\fIbits\fP-1]
First input operand
.TP
b[0]-b[\fIbits\fP-1]
Second input operand
.TP
c[0]-c[\fIbits\fP-1]
Third input operand if option \fBcsa\fP is selected.
.TP
cin
Carry in
.TP
cout
Last carry output
.TP
coc
Overflow when three operands
.TP
co[0]-co[\fIbits\fP-1]
Intermediates carries
.TP
s[0]-s[\fIbits\fP-1]
Sum result
.TP
sub
When is equal to 5V, it is a subtractor, otherwhise an adder.
.TP
vdd[],vss[]
Power supplies
.LP
The width of the block is given by :
.TP
width = 73 + (27*(Log2(\fIbits\fP)+1)) + 67(if \fBcsa\fP) + 16(if \fBcout\fP) lambdas
.TP
height = \fIbits\fP*60 lambdas
.LP
The generator needs a library cells to well compute.
The \fBMBK_CATA_LIB\fP(1) environment variable should contain the path to the
library \fIgalib\fP.
.SH OPTIONS
.TP
.IB bits
The range is from 3 to 128 bits.
.TP
.B -cin
The generated adder will contain a carry input connector on the North side in
Metal1 layer.
.TP
.B -cout
The generated adder will contain all the intermediates carry, accessible in
Metal2 Layer, with the multi-access possibilities.
.TP
.B -overn
The generated adder will contain the previous carry output \fBover\fP in Metal1
layer on the North side.
This signal could be used to calculate an overflow flag = over^cout.
.TP
.B -not
The output sum will be complemented but still keep the connector name
.BR s .
.TP
.B -csa
The generated adder will be an adder with 3 operands, and one overflow connector
on the North side in Metal1 layer.
.TP
.B -sub
The adder generated is, in fact, a subtractor, and performs always a-b. If the
option \fB-cin\fP is present, then the block calculates a+not(b)+cin .
.TP
.B -addsub
The block obtained is a adder/subtractor. If the input terminal is set to 5V
then it is a subtractor. If the option \fB-cin\fP is present, then the block
performs a+xor(b,sub)+cin.
.TP
.B -over -deci -stretch -stretch2
Bull Options.
.TP
.B -msb0
Default is index 0 for the least significant bit. When \fB-msb0\fP is present
the the most significant bit is indexed with 0.
.TP
.B -virtual
Default blocks contain fixed terminals. Virtual terminals can be obtained
using this option. This way,
.BR dpr (1) router should optimized the resultant routed data-path.
.TP
.B -layout
The generated view asked is a layout view. The different formats are given by
.BR mbk (1)
documentation, using
.BR MBK_OUT_PH (1)
environment variable.
.TP
.B -icon
Icon view for schematic capture. The possible output formats are specified
setting the ICON_OUT (1) environement variable.
.TP 
.B -vhdl
The generated view asked is a data-flow behavioural view. The description of
the VHDL used is gived by
.BR vhdl (5).
.TP
.B -patterns
Some test vectors are proposed to validate the generated block. The format used
is the
.BR pat (5)
one accepted by the VHDL simulator
.BR asimut (1).
.TP
.B -datasheet
Principals process dependent informations are proposed to estimate the adder
performances. It is the default view if none is specified.
.TP
.B -physicalbox
The generated view asked is a interface view. The different formats are given by
.BR mbk (1)
documentation, using
.BR MBK_OUT_PH (1)
environment variable.
.TP
.B -logicalbox
The generated view asked is an interface netlist view.
The different formats are given by
.BR mbk (1)
documentation, using
.BR MBK_OUT_LO (1)
environment variable.
.TP
.B -perf
Programmer Option
.TP
.BI -o \|blockname\|
The generated adder name will be \fIblockname\fP.
.SH EXAMPLES
.IP
.B rsa 32 -cin -cout -layout -vhdl
.LP
Produce the layout and vhdl view of a two operands adder with carry in
and final intermediates carries with the default name:
.TP
.B rsa32daaa.cp
.TP
.B rsa32daaa.vbe
.LP
.SH OUTPUT FILES
.TP 20
.IB \|name\| .xx
The layout  and netlist views. The suffix
depends on the
.BR MBK_OUT_LO (1)
and 
.BR MBK_OUT_PH (1)
environment variables.
\fIname\fB is \fIblockname\fP or, by default, prefixed by \fIrsa\fB.
.TP 
.IB \|name\| .vbe
The \fBVHDL\fP behavioral view of the shifter.
.SH ENVIRONMENT VARIABLES
.TP 20
.B MBK_CATA_LIB
contains the directory path of the recurrence solver adder leaf cells library.
This library is, by default, in \fI/labo/cells/rsa\fP, and if not, depends upon
the system administrator installation.
.TP
.B MBK_WORK_LIB
contains the directory path of the working
directory. Usually set to \fB.\fP .
.TP
.B MBK_IN_PH
contains the format of the recurrence solver adder leaf cells library.
.TP
.B MBK_OUT_PH
contains the desired format of the layout output.
.TP
.B MBK_OUT_LO
contains the desired format of the netlist output.
.SH SEE ALSO
.BR MBK_CATA_LIB (1),
.BR MBK_WORK_LIB (1),
.BR MBK_OUT_PH (1),
.BR MBK_OUT_LO (1),
.BR MBK_IN_PH (1),
.BR vhdl (5),
.BR pat (5),
.BR fitpath (1),
.BR rfg (1),
.BR bsg (1),
.BR grog (1),
.BR genlib (1)

.so man1/alc_bug_report.1

