.\"   $Id: rage.1,v 1.1 1999/05/31 17:30:14 alliance Exp $
.\" @(#)Labo.1 0.0 91/04/02 UPMC; Author: Abdelhafid BOUARAOUA
.TH RAGE 1 "October 1, 1997" "ASIM/LIP6" "ALLIANCE USER COMMANDS"
.SH NAME
rage \- Random Acess Memory(RAM) Generator
.so man1/alc_origin.1
.SH SYNOPSIS
.B rage
.I bits
.I words
.B [ -n | -m | -w ] 
.B [ -u ] [ -t\fIn\fP ]
.B [ -ckup / -ckdown ]
.B [ -layout ]    
.B [ -physicalbox ] [ -vhdl ]
.B [ -datasheet ]       
.B [ -icon ] [ -o \fBblockname\fP ]
.SH DESCRIPTION
.B rage
generates several different views of a Random Acess Memory.
The ram generated is always constitued of two ram-cells blocks between which is placed a decoder cell.
.LP
The interfaces of the ram are given below(there is two versions of the interface because input and output data can be bidirectionnal or separated):
.br
.ul
bidirectionnal data:
.br
ENTITY \fIrage\fP IS
.TP
PORT(\fIadr\fP: IN BIT_VECTOR(0 TO \fIn\fP);
\fIdata\fP: INOUT BIT_VECTOR(0 TO \fIw\fP);
.br
\fIck\fP: IN BIT;
.br
\fIwrite\fP: IN BIT;
.br
\fIen\fP: IN BIT;
.br
\fIvdd\fP: IN BIT;
.br
\fIvss\fP: IN BIT);
.LP
END \fIrage\fP;
.br

.ul
unidirectionnal data:
.br
ENTITY \fIrage\fP IS
.TP
PORT(\fIadr\fP: IN BIT_VECTOR(0 TO \fIn\fP);
\fIdin\fP: IN BIT_VECTOR(0 TO \fIw\fP);
.br
\fIdout\fP: OUT BIT_VECTOR(0 TO \fIw\fP);
.br
\fIck\fP: IN BIT;
.br
\fIwrite\fP: IN BIT;
.br
\fIen\fP: IN BIT;
.br
\fIvdd\fP: IN BIT;
.br
\fIvss\fP: IN BIT);
.LP
END \fIrage\fP;
.br
.LP
.B
Write is active high and 
.B en
is active high. When 
.BR ck
is high for -ckup option RAMs or ck is low for -ckdown option RAMS the RAM is in precharge state, otherwise it is evaluation (read or write mode). The en signal suspends the normal functionment of the RAM by disabling it when it is '0'. In this case the RAM remains in precharge mode. It is
authorised to change only at the precharge state of the clock.
.SH OPTIONS
.TP 12
.IB bits
is the number of bits per word. The range is from 2 to 128, and this number must be even.
.TP 12
.IB words
indicates the size of the ram. The possible values are 128, 256, 512, 1024, 2048 and 4096 words.
.TP 12
.B -n|-m|-w
specifies the aspect/ratio of the generated block. In fact, this generator is designed on the base of:
.IP
- 3 line decoders: 6 --> 64, 7 --> 128, 8 --> 256
.br
- 4 column decoders(multiplexers): 2 --> 1, 4 -->1, 8 --> 1, 16 --> 1
.br
Then, we obtain the following table, corresponding to all the possibilities of our generator:
.br
      -------------------------
.br
      |          mux          |
.br
      |-----------------------|
.br
      |  1  |  2  |  3  |  4  |
.br
 -----|-----------------------|
.br
 | 6  | 128 | 256 | 512 | 1024|
.br
 |----|-----------------------|
.br
 | 7  | 256 | 512 | 1024| 2048|
.br
 |----|-----------------------|
.br
 | 8  | 512 | 1024| 2048| 4096|
.br
 ------------------------------
.br
for example: in this configuration we will have three versions of the 1K-word ram.
.br
- the first is a 256x4: which is narrow
.br
- the second is a 128x8: which is medium
.br
- the third is a 64x16: which is wide
.br
So, the -n,-m and -w parameters correspond to the different ways of implementation of the ram size regarding to that we want the narrow, the medium or the wide version.
.br
.ul
Note:
However, there is some cases where the choose is limited and can be not possible(extremity sizes, for ex.)
.TP 12
.B -u
specifies that the input and output data buses must be separated (unidirectionnal)
.TP 12
.B -t\fIn\fP
allows the insertion of one or two allow-ALU2 across the ram (one or two with each bit). \fIn\fP=1 or 2.
.TP 12
.B -ckup or -ckdown
These two options indicate respectively that the generated RAM behaves like a rising edge (ckup) or falling edge (ckdown) flip-flop. -ckdown is the default option.
.TP 12
.B -layout
generates the layout view of the ram
.TP 12
.B -vhdl
gives a vhdl description of the ram
.TP 12
.B -physicalbox
generates only a physicalbox layout of the ram with physical connectors.
.TP 12
.B -datasheet
provides technical and design informations about the ram like size values, function chronograms and propagation delays.
.TP 12
.BI -o \|blockname\|
specifies the name of the generated ram (default name is ram<\fIbits\fP>_<\fIword\fP>)
.TP 12
.BI icon
Provides a VTI schematic compatible icon representing the generated RAM with connectors.
.SH SPECIAL DIRECTIVES
All the cells within any generated RAM have been tested and are correct except for one cell
which is the memory cell which introduces a design rule violation due to its proper design.
The cell "dtram_c" has an apparent design rule violation. To perform a well DRC on the whole
generated RAM one have to copy a 'light' version of this cell called "dtram2_c" in the current
work directory and change its name to "dtram_c" so that the DRC program will take this one
first.
.br
For most tested target technologies, the translation of this cell from symbolic to real 
gives a good result. In some cases, one have to patch the cell. However, to avoid any problem
one can follow a process of generation. This process is in fact the default process.
The cell "dtram_c" must be translated to the target technology before translating all the RAM.
This cell has a 'G' option into the CATAL file instead of 'C' option. That means that this cell
must not be translated because the real layout view already exist. So it have to be integrated
into the global figure (i.e. generated RAM).
Perform the following operations:
.IP
.B s2r dtram_c
.br
.B <patch the cell>
.br
.B <make a real DRC
.B on the cell>
.br
.B s2r <ram>
.br
.LP
The appropriate RDS_TECHNO_NAME, RDS_IN, RDS_OUT environment variables setting is
explained in S2R(3).
For more informations about the tools used to perform this operation, please see S2R(3).
.SH EXAMPLES
.IP
.B rage 64 1024 -m -u -layout
.B -vhdl -datasheet -o memo
.LP
produces the layout and vhdl views of a 1K size ram of 64-bits word , medium aspect/ratio and separated data buses named "memo" and provides informations about its function, timing and layout charachteristics.
.SH SEE ALSO
.BR MBK_CATA_LIB (1) ,
.BR MBK_WORK_LIB (1) ,
.BR MBK_OUT_PH (1) ,
.BR MBK_OUT_LO (1) ,
.BR MBK_IN_PH (1) ,

.so man1/alc_bug_report.1

