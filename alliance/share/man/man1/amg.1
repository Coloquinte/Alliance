.\"   $Id: amg.1,v 1.1 1999/05/31 17:30:13 alliance Exp $
.\" @(#)LABO.1 0.0 91/04/02 UPMC;AUTHOR:Philippe ROYANNEZ
.TH AMG 1 "October 1, 1997" "ASIM/LIP6" "ALLIANCE USER COMMANDS"
.SH NAME
AMG \- Array Multiplior Generator
.so man1/alc_origin.1
.SH SYNOPSIS
.B amg
.I <size1>
.I <size2>
.B [ -t0 -t1 -n=<integer> ]
.B [ -virtual -msb0 ]
.B [ -layout -vhdl -datasheet -icon -patterns]
.B [ -o <BlockName> ]
.SH DESCRIPTION
	amg provides several different views of a booth multiplier with or without pipeline.
The multiplier generated respects a bit-slice topologie and can be inserted in a data path.
.LP
The Interface is the following

.br
.ul
unpipelined multiplier:
.br

ENTITY \fIamg\fP IS
.TP
PORT	(
\fIa\fP: IN	BIT_VECTOR (\fIM-1\fP DOWNTO 0);
.br
\fIb\fP: IN	BIT_VECTOR (\fIN-1\fP DOWNTO 0);
.br
\fIp\fP: OUT	BIT_VECTOR (\fI(N+M-1)\fP DOWNTO 0);
.br
\fIVdd\fP: IN BIT;
.br
\fIVss\fP: IN BIT
.br
);
.br
END \fIamg\fP;
.br

.TP
.ul
pipelined multiplier:
.TP
ENTITY \fIamg\fP IS
.TP
PORT	(
\fIa\fP:	IN	BIT_VECTOR (\fIM-1\fP DOWNTO 0),
.br
\fIb\fP:	IN	BIT_VECTOR (\fIN-1\fP DOWNTO 0),
.br
\fIp\fP:	OUT	BIT_VECTOR (\fI(N+M-1)\fP DOWNTO 0),
.br
\fIck\fP:	IN 	BIT,
.br
\fIsd\fP:	IN 	BIT,
.br
\fIst\fP:	IN 	BIT,
.br
.br
\fIscin\fP:	IN	BIT,
.br
\fIscout\fP:	OUT	BIT
.br
\fIVdd\fP: IN BIT;
.br
\fIVss\fP: IN BIT
);
.br
END \fIamg\fP;

.br
.SH OPTIONS
.TP 12
.IB size1:
is the first operand size. The range is from 6 to 64.It's an even number.
.TP 12
.IB size2:
is the second operand size. The range is from 6 to 64. It's an even number.
.TP 12
.IB -msb0
Default is index 0 for the least significant bit. When \fB-msb0\fP is present
the the most significant bit is indexed with 0.
.TP 12
.IB -virtual
Default blocks contain fixed terminals. Virtual terminals can be obtained
using this option. This way,
.BR dpr (1) router should optimized the resultant routed data-path.
.TP 12
.IB -layout:
provides the layout view of the multiplier.
.TP 12
.IB -vhdl:
gives a behavioural vhdl description of the multiplier
.TP 12
.IB -datasheet:
provides technical informations about the multiplier like size value or propagation delays .
.TP 12
.IB -icon:
provides an icon representing the generated multiplier
.TP 12
.IB -patterns:
provides a set of test vectors in .pat format which is the format used by asimut
.TP 12
.IB -t0,-t1,-n:
These parameters specifie the pipelined configuration
.TP 12
The global topologie is the following

____________________________________________________
.br
		|				|	
	DNC			MUX+CSA			CLA
		|				|	
____________________________________________________

.br
As it can be seen on the figure, the multiplier can be
divided into three parts:
.br
-> The input part is the DNC part. 
.br
-> The central part is a succession of "mux column" and "csa column".
.br
-> The output part is the final adder of the multiplication.
.br

t0: This parameter indicates if a "master-slave column" must be placed after the first part.
.br
* t0 -> after 
.br
* default -> none 
.br

t1: This parameter indicates if a "master-slave column" must be placed before the CLA.
.br
* t1 -> before
.br
* default -> none
.br

n: This parameter indicates the number of "master-slave columns" in the central part
.br
.TP 12
.BI -o	BlockName:
specifies the name of the generated multiplier.
(default name is m<size1>x<size2> )
.SH EXAMPLES
.IP
amg 32 32 -t0 -t1 -n=3 -layout -datasheet -vhdl  -o mult32
.br

Produces the layout, the datasheet, and the vhdl view of a 32 X 32 size multiplier with pipeline.
.SH SEE ALSO
.BR MBK_CATA_LIB (1) ,
.BR MBK_WORK_LIB (1) ,
.BR MBK_OUT_PH (1) ,
.BR MBK_OUT_LO (1) ,
.BR MBK_IN_PH (1) ,

.so man1/alc_bug_report.1

