.\"   $Id: genlib.1,v 1.2 2000/09/28 16:27:58 francois Exp $
.\" @(#)Labo.l 0.0 90/22/08 UPMC; Author: Frederic Petrot
.TH GENLIB 1 "October 1, 1997" "ASIM/LIP6" "ALLIANCE USER COMMANDS"
.SH NAME
genlib \- Procedural design language based upon C, along with its
compiler 
.so man1/alc_origin.1
.SH DESCRIPTION
\fBgenlib\fP is a set of \fIC\fP functions dedicated to procedural generation
purposes.
From a user point of view, \fBgenlib\fP is a circuit's description language
that allows standard \fIC\fP programming flow control, variable use, and 
specialized functions in order to handle vlsi objects.
.br
Based upon the \fIAlliance\fP \fBmbk\fP data structures, the \fBgenlib\fP
language gives the user the ability to describe both netlist and
layout views, thus allowing both standard cell and full custom approachs.
.br
.TP 20
Netlist capture :
\- it is a hierachical structural description of
a circuit in terms of connectors (I/Os), signals (nets), and instances.
.br
The function calls used to handle the netlist view are
.RS
	GENLIB_DEF_LOFIG(3)
.br
	GENLIB_SAVE_LOFIG(3)
.br
	GENLIB_LOINS(3)
.br
	GENLIB_LOCON(3)
.br
	GENLIB_LOSIG(3)
.br
	GENLIB_FLATTEN_LOFIG(3)
.br
Some facilities, in order to create vectors are also available :
.br
	GENLIB_BUS(3)
.br
	GENLIB_ELM(3)
.RE
.TP 20
Standard cell placement
The following functions allows to define a placement file for a standard cell
design.
This file can be used by the standard cell router \fBscr\fP(1).
.RS
	GENLIB_DEF_PHSC(3)
.br
	GENLIB_SAVE_PHSC(3)
.br
	GENLIB_SC_PLACE(3)
.br
	GENLIB_SC_RIGHT(3)
.br
	GENLIB_SC_TOP(3)
.br
	GENLIB_SC_LEFT(3)
.br
	GENLIB_SC_BOTTOM(3)
.br
.RE
.TP 20
Full custom symbolic layout
Those functions are dedicated to optimized full custom procedural layout.
In order to provide some process independance, \fIAlliance\fP uses a
symbolic layout approach (fixed grid without compaction.)
.br
The symbolic objects are segments (wires), vias (contacts), connectors (I/Os),
references and instances.
For more informations, see \fBphseg\fP(1), \fBphvia\fP(1), \fBphcon\fP(1),
\fBphref\fP(1), \fBphins\fP(1), and \fBalc\fP(1).
.br
	GENLIB_DEF_PHFIG(3)
.br
	GENLIB_SAVE_PHFIG(3)
.br
	GENLIB_DEF_AB(3)
.br
	GENLIB_DEF_PHINS(3)
.br
	GENLIB_PHCON(3)
.br
	GENLIB_COPY_UP_CON(3)
.br
	GENLIB_COPY_UP_CON_FACE(3)
.br
	GENLIB_COPY_UP_ALL_CON(3)
.br
	GENLIB_PHSEG(3)
.br
	GENLIB_COPY_UP_SEG(3)
.br
	GENLIB_THRU_H(3)
.br
	GENLIB_THRU_V(3)
.br
	GENLIB_THRU_CON_H(3)
.br
	GENLIB_THRU_CON_V(3)
.br
	GENLIB_WIRE1(3)
.br
	GENLIB_WIRE2(3)
.br
	GENLIB_WIRE3(3)
.br
	GENLIB_PHVIA(3)
.br
	GENLIB_PLACE(3)
.br
	GENLIB_PLACE_RIGHT(3)
.br
	GENLIB_PLACE_TOP(3)
.br
	GENLIB_PLACE_LEFT(3)
.br
	GENLIB_PLACE_BOTTOM(3)
.br
	GENLIB_PLACE_ON(3)
.br
	GENLIB_PHREF(3)
.br
	GENLIB_COPY_UP_REF(3)
.br
	GENLIB_COPY_UP_ALL_REF(3)
.br
	GENLIB_PLACE_VIA_REF(3)
.br
	GENLIB_PLACE_CON_REF(3)
.br
	GENLIB_PLACE_SEG_REF(3)
.br
	GENLIB_FLATTEN_PHFIG(3)
.br
	GENLIB_GET_REF_X(3)
.br
	GENLIB_GET_REF_Y(3)
.br
	GENLIB_GET_CON_X(3)
.br
	GENLIB_GET_CON_Y(3)
.br
	GENLIB_HEIGHT(3)
.br
	GENLIB_WIDTH(3)
.RE
.LP
In order to have information about each of these functions, use the online
documentation with \fBman\fP(1), as in ``man function-name''.
.br
.LP
It is strongly recommended to read some books
on C programming, in order to take full advantage of the C flow control
possibilities, as it may greatly reduce the size of a \fBgenlib\fP source code.
.SH ENVIRONMENT VARIABLES
.TP 20
the variables are :
.ta 25n
\fIname\fP	\fIdefault value\fP
.br
MBK_IN_LO(1)	al
.br
MBK_OUT_LO(1)	al
.br
MBK_IN_PH(1)	ap
.br
MBK_OUT_PH(1)	ap
.br
MBK_CATA_LIB(1)	.
.br
MBK_WORK_LIB(1)	.
.br
MBK_CATAL_NAME(1)	CATAL
.LP
see the corresponding manual pages for further informations.
.br
In order to compile and execute a genlib file, one has to call \fBgenlib\fP
with one argument, that is the \fBgenlib\fP source file.
The source file must have a .c extension, but the extension should not be
mentionned on the command line.
.PP
The names used in genlib, as arguments to genlib functions, should be
alphanumerical, including the underscore.
They also are not case sensitive, so \fBVDD\fP is equivalent to \fBvdd\fP.
Vectorized connectors or signal can be declareds using the \fB[n:m]\fP
construct.
.SH OPTIONS
Two options can alter the behavior of \fBgenlib\fP : 
.TP 20
-v
displays everything that is to be done during the compilation and
execution process: verbose mode.
.TP
-k
keeps the executable along with the compilation Makefile after completion.
.SH EXAMPLES
\fBgenlib\fP -v amd2901
.br
Compiles and runs a \fBgenlib\fP source file called amd2901.c
.SH SEE ALSO
.BR dpgen (1),
.BR mbk (1),
.BR alc (1),
.BR scr (1),
.BR bgd (1),
.BR bsg (1),
.BR grog (1),
.BR rsa (1).

.SH DIAGNOSTICS
.RS
\fBCompilation aborted\fP
.RE
This indicates either a \fIC\fP syntaxic error, most likely, or a
misinstallation of the \fBmbk\fP package of the \fIAlliance\fP CAD system,
if the error is \fBcannot find file genlib.h\fB.
.RS
\fBLink aborted\fP
.RE
This indicates a
misinstallation of the \fBmbk\fP package of the \fIAlliance\fP CAD system,
see your system administrator for details.
.PP
Many errors may occur while executing the source file, so refer to the proper
genlib function manual for more.

.so man1/alc_bug_report.1

