.\"   $Id: grog.1,v 1.1 1999/05/31 17:30:13 alliance Exp $
.\" @(#)grog.1 0.0 90/22/08 UPMC; Author: Frederic Petrot
.\" choose font for the entire document, when in groff
.ie t \{\
.fp 4 C \}
.el \{\
.fp 4 B \}
.TH GROG 1 "October 1, 1997" "ASIM/LIP6" "ALLIANCE USER COMMANDS"
.SH NAME
grog \- a generic \fIROM\fR generator
.SH SYNOPSIS
\f4grog \fIbits words codefile \f4[ -tr ] [ -hz ] [ -r ] [-msb0]
[ -o \fIblockname\f4 ] [ -layout ] [ -vhdl ] [ -icon ] [ -logicalbox ]
[ -physicalbox ] [ -datasheet ]\fR
.so man1/alc_origin.1
.SH DESCRIPTION
\f4grog\fR is high speed portable \fIROM\fR generator.
The \fIROM\fP is contact coded, this means than all non used transistors are
left with an unconnected drain.
This is not an error, but some verification tools may be mixed up.
.\" \f4grog\fR generates different views of a read only memory,
.\" ranging from layout to datasheet.
.br
The \fIROM\fR binary contents is defined in the \f4codefile\fR.
This file is a dataflow VHDL description file with \f4vbe\fR extension. 
In this file, the text after the first \f4WITH/SELECT/WHEN\fR construct is
considered as the \fIROM\fR contents.
The constant and concatenation operators are allowed in this description.
.br
A little example is given below :
.br
.nf
.ie t \fC
.el \f4
constant rot    : bit_vector(2 downto 0) := B"101" ;
constant pet    : bit_vector(2 downto 0) := B"110" ;
constant more   : bit_vector(3 downto 0) := B"0100" ;
constant some   : bit_vector(3 downto 0) := B"0001" ;
constant more   : bit_vector(3 downto 0) := B"0100" ;
constant ones   : bit_vector(3 downto 0) := B"1111" ;
constant fred   : bit_vector(7 downto 0) := B"01110111" ;
constant other  : bit_vector(7 downto 0) := B"10000110" ;
constant stuff  : bit_vector(7 downto 0) := B"01110101" ;
constant eric   : bit_vector(7 downto 0) := B"10101110" ;

WITH address(5 DOWNTO 0) SELECT
     output(0 TO 15) <= some & more & stuff WHEN B"000000",
                        some & other & ones WHEN B"1" & X"F",
                        fred & eric         WHEN pet & rot,
                        X"FFFF"             WHEN OTHERS;
.fi
.br
.ft R
Both the address and the output assigments have to contain the vector
ordering explicitly.
The least significant bit of the address vector has index \f40\fR.

In order to be able to generate any view, the path to \f4grog\fR leaf cells
library, \fIgrol\fR, must be set correctly.
The usual path is \f4/labo/cells/grog\fR, and has to be put in the
environment through the use of the \f4MBK_CATA_LIB\fR(1) shell variable.
Notice that the leaf cells of the \fIROM\fR follows a given naming convention,
to avoid name collisions when generating the final tape.
So, all leaf cells names are prefixed with \f4gr\fR and suffixed with
\f4_c\fR.
.LP
The \fIROM\fR interface is described here for behavior description.
.br
.nf
.ie t \fC
.el \f4
 ENTITY grog IS
   PORT( adr  : IN BIT_VECTOR(\fIn\fP DOWNTO 0);
         ck   : IN BIT_VECTOR(\fIk\fP DOWNTO 0);
         f    : OUT BIT_VECTOR(\fIm\fP DOWNTO 0);
         vdd  : IN BIT;
         vss  : IN BIT );
 END grog;
.ft R
.fi
.LP
When the number of words is larger than \f4512\fR, the \f4ck\fR connector
is vectorized.
In that case, all clock connectors are not internally shorted and must
be externally connected to the same signal.
.SH OPTIONS
.ie t \fC
.el \f4
.TP 20
bits
.ft R
specifies the number of bits per words.
The legal values range from \f41\fR to \f464\fP inclusive.
.ie t \fC
.el \f4
.TP 20
words
.ft R
specifies the number of words in the rom.
The legal values are \f464, 128, 256, \fIn\fP \(** 512\fR,
where \fIn\fP ranges from \f41\fP to \f48\fP inclusive.
.ie t \fC
.el \f4
.TP 20
codefile
.ft R
gives the name of the file to be used for programming the \fIROM\fP.
The file is expected to have a \f4.vbe\fP extension.
.ie t \fC
.el \f4
.TP 20
-tr
.ft R
indicates that a minimum width metal 1 through route is to be placed each
every vertical bit slice in the \fIROM\fP matrix.
This through route does not have connectors associated to it, it is just
a path to be used by floorplan router if needed.
.ie t \fC
.el \f4
.TP 20
-hz
.ft R
indicates that the output buffer is a three-state buffer and not a simple
direct buffer.
This means that a connector for the three-state control signal
called \f4oe\fP, is created.
.br
The output is in high impedance when \f4oe\fP is low.
.ie t \fC
.el \f4
.TP 20
-r
.ft R
when chosen, this option reverses the topological order of the ouputs.
By default, \f4f[0]\fP is on the left hand side of the circuit, the 
decoder being at the right hand side.
Using \f4r\fP indicates that \f4f[0]\fP will be placed on the right
hand side.
.ie t \fC
.el \f4
.TP 20
-msb0
.ft R
indicates that the most significant bit of the addresses, \f4adr\fR lines, is
called \f4adr(0)\fP in the \fIvhdl\fR coding file, thus changing its meaning
and the \fIROM\fP binary contents.
.ie t \fC
.el \f4
.TP 20
-n \fIblockname\fR
forces the resulting files to have the name \fIname\fP.
If not specified, the generator will create a unique name, for a given
set of parameters excluding the coding file.
.ie t \fC
.el \f4
.TP 20
-layout
.ft R
if stated, will generate the \fIROM\fP layout.
.ie t \fC
.el \f4
.TP 20
-vhdl
.ft R
will output the \f4vhdl\fP description of the coded \fIROM\fP.
A pattern file, for cosimulation purpose, is also created.
.TP 20
\f4-icon\fR
will generate the icon view of the block.
.ie t \fC
.el \f4
.TP 20
-logicalbox
.ft R
will generate an interface of the circuit, in terms of connectors, for use
with a router.
No internal description in terms of gate netlist is generated.
.ie t \fC
.el \f4
.TP 20
-physicalbox
.ft R
generates only a layout outline of the \fIROM\fP.
This is of little interest, since the internal layout is not top secret.
.ie t \fC
.el \f4
.TP 20
-datasheet
.ft R
outputs some informations in readable form about the \fIROM\fP, like size,
and also an estimation of the propagation delays.
.SH EXAMPLES
.RS
.ie t \fC
.el \f4
grog 5 1024 romcode -hz -r -logicalbox -physicalbox
.ft R
.RE
.br
This generate a \fIROM\fP of 1024 words of 5 bits each, with an high impedance 
output, and \fIlsb\fP first.
.br
The generated views give only the interface of the block.
.RS
.ie t \fC
.el \f4
grog 28 64 dlxm_ctl layout netlist vhdl 1.0 datasheet
.ft R
.RE
.br
This generate a \fIROM\fP of 64 words of 28 bits each, using the \fIdlxm_ctl.vbe\fP
file as coding file, and outputs a layout, a netlist, and a datasheet with
delay estimations for a 1.0 \fIp\fPF load on \f4f\fP output lines.
.SH OUTPUT FILES
.TP 20
\fIname\fP.\f4xx\fP
Layout and netlist views.
For these views, the suffixes depend on the
\f4MBK_OUT_LO\fP(1) and \f4MBK_OUT_PH\fP(1) environment variables.
The \fIname\fP is either the one specified by the user, or an internally
generated one prefixed by \f4r\fIwords\f4x\fIbits\fR.
.TP
\fIname\fP.\f4vbe\fP
\fIvhdl\fP behavior.
.TP
\fIname\fP.\f4pat\fP
Set of patterns for validation.
.TP
\fIname\fP.\f4dts\fP
Datasheet.
.SH ENVIRONMENT VARIABLES
.TP 20
\f4MBK_CATA_LIB\fR
contains the directory path of the \fIROM\fR generator leaf cell library,
\fIrolib\fR.
This library is by default in \f4/labo/cells/grog\fR, and if not,
depends upon the system administrator installation.
.TP
\f4MBK_WORK_LIB\fR
contains the directory path of the working directory, usually set to
\f4.\fR (dot).
.TP
\f4MBK_IN_PH\fR
contains the format of the \fIROM\fR generator leaf cell library.
.TP
\f4MBK_OUT_PH\fR
contains the expected format of the generated layout. 
.TP
\f4MBK_OUT_LO\fR
contains the expected format of the netlist output.
.TP
\f4ICON_OUT\fR
contains the expected format of the icon output.
.SH SEE ALSO
.BR mbk (1),
.BR genlib (1),
.BR rfg (1),
.BR bsg (1),
.BR rsa (1).

.so man1/alc_bug_report.1

